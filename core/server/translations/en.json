{
    "common": {
        "mail":{
            "title": "Ghost at {domain}"
        },
        "seeLinkForInstructions": "See {link} for instructions.",
        "time": {
            "seconds": "seconds"
        }
    },
    "errors": {
        "apps": {
            "failedToParseActiveAppsSettings": {
                    "error": "Failed to parse activeApps setting value: {message}",
                    "context": "Your apps will not be loaded.",
                    "help": "Check your settings table for typos in the activeApps value. It should look like: [\"app-1\", \"app2\"] (double quotes required)."
            },
            "appWillNotBeLoaded": {
                "error": "The app will not be loaded",
                "help": "Check with the app creator, or read the app documentation for more details on app requirements"
            
            },
            "permissionsErrorLoadingApp": {
                "error": "Error loading app named {name}; problem reading permissions: {message}"
            },
            "noInstallMethodLoadingApp": {
                "error": "Error loading app named {name}; no install() method defined."
            },
            "noActivateMethodLoadingApp": {
                "error": "Error loading app named {name}; no activate() method defined."
            },
            "accessResourceWithoutPermission": {
                "error": "The App \"{name}\" attempted to perform an action or access a resource ({perm}.{method}) without permission."
            },
            "mustProvideAppName": {
                "error": "Must provide an app name for api context"
            },
            "mustProvideAppPermissions": {
                "error": "Must provide app permissions"
            },
            "unsafeAppRequire": {
                "error": "Unsafe App require: {msg}"
            }
            
            },
        "middleware": {
            "ghostbusboy": {
                "fileUploadingError": "Something went wrong uploading the file"
            
            },
            "oauth": {
                "invalidClient": "Invalid client.",
                "invalidRefreshToken": "Invalid refresh token.",
                "refreshTokenExpired": "Refresh token expired."
            },
            "privateblogging": {
                "wrongPassword": "Wrong password"
            },
            "spamprevention": {
                "tooManyAttempts": "Too many attempts.",
                "noUsername": "No username.",
                "noPassword": "No password entered",
                "tooManySigninAttempts": {
                    "error": "Only {rateSigninAttempts} tries per IP address every {rateSigninPeriod} seconds.",
                    "context": "Too many login attempts."
                },
                "tryAgainLater": " Please try again later",
                "waitOneHour": " Please wait 1 hour.",
                "noEmail": "No email.",
                "forgottenPasswordEmail": {
                    "error": "Only {rfa} forgotten password attempts per email every {rfp} seconds.",
                    "context": "Forgotten password reset attempt failed"
                },
                "forgottenPasswordIp": {
                    "error": "Only {rfa} tries per IP address every {rpp} seconds.",
                    "context": "Forgotten password reset attempt failed"
                }
                
            },
            "themehandler": {
                "missingTheme": "The currently active theme {theme} is missing."
            
            }
        },
        "utils": {
            "startupcheck": {
                "unsupportedNodeVersion": {
                    "error": "ERROR: Unsupported version of Node",
                    "context": "Ghost needs Node version {neededVersion} you are using version {usedVersion}\n",
                    "help": "Please go to http://nodejs.org to get a supported version"
                },
                "cannotFindConfigForCurrentNode": {
                    "error": "ERROR: Cannot find the configuration for the current NODE_ENV: {nodeEnv}\n",
                    "help": "Ensure your config.js has a section for the current NODE_ENV value and is formatted properly."
                },
                "ghostMissingDependencies": {
                    "error": "ERROR: Ghost is unable to start due to missing dependencies:\n  {error}",
                    "explain": "\nPlease run `npm install --production` and try starting Ghost again.", 
                    "help": "Help and documentation can be found at http://support.ghost.org.\n"
                },
                "unableToAccessContentPath": {
                    "error": "ERROR: Unable to access Ghost's content path:",
                    "help": "Check that the content path exists and file system permissions are correct. \nHelp and documentation can be found at http://support.ghost.org"
                },
                "unableToOpenSqlite3Db": {
                    "error": "ERROR: Unable to open sqlite3 database file for read/write",
                    "help": "\nCheck that the sqlite3 database file permissions allow read and write access. \nHelp and documentation can be found at http://support.ghost.org."
                }
            }
        },
        "config": {
            "couldNotLocateConfigFile": {
                "error": "Could not locate a configuration file.",
                "help": "Please check your deployment for config.js or config.example.js."
            },
            "couldNotOpenForReading": {
                "error": "Could not open {file} for read.",
                "help": "Please check your deployment for config.js or config.example.js."
            },
            "couldNotOpenForWriting": {
                "error": "Could not open {file} for write.",
                "help": "Please check your deployment for config.js or config.example.js."
            },
            "invalidUrlInConfig": {
                "error": "invalid site url",
                "description": "Your site url in config.js is invalid.",
                "help": "Please make sure this is a valid url before restarting"
            },
            "urlCannotContainGhostSubdir": {
                "error": "ghost subdirectory not allowed",
                "description": "Your site url in config.js cannot contain a subdirectory called ghost.",
                "help": "Please rename the subdirectory before restarting"
            
            },
            "dbConfigInvalid": {
                "error": "invalid database configuration",
                "description": "Your database configuration in config.js is invalid.",
                "help": "Please make sure this is a valid Bookshelf database configuration"
            },
            
            "deprecatedProperty": {
                "error": "The configuration property [{property}] has been deprecated.",
                "explanation": "This will be removed in a future version, please update your config.js file.",
                "help": "Please check http://support.ghost.org/config for the most up-to-date example."
            },
            
            "invalidServerValues": {
                "error": "invalid server configuration",
                "description": "Your server values (socket, or host and port) in config.js are invalid.",
                "help": "Please provide them before restarting."    
            }
        
            
        },
        "general": {
            "moreInfo": "\nMore info: {info}",
            "requiredOnFuture": "This will be required in future. Please see {link}"
        },
        "httpServer": {
            "addressInUse": {
                "error": "(EADDRINUSE) Cannot start Ghost.",
                "context" : "Port {port} is already in use by another program.",
                "help": "Is another Ghost instance already running?"
            },
            "otherError": {
                "error": "(Code: {errorNumber})",
                "context" : "There was an error starting your server.",
                "help": "Please use the error code above to search for a solution."
            }
        },
        "index": {
            "javascriptFilesNotBuilt": {
                "error": "Javascript files have not been built.",
                "help": "\nPlease read the getting started instructions at: {link}"
            }
        },
        "mail": {
            "noEmailTransportConfigured": {
                "error": "Email Error: No e-mail transport configured."
            },
            "incompleteMessageData": {
                "error": "Email Error: Incomplete message data."
            },
            "failedSendingEmail":{
                "error": "Email Error: Failed sending email"
            },
            "noMailServerAtAddress": {
                "error": ": there is no mail server at this address: {domain}"
            },
            "messageNotSent": {
                "error": "Email Error: message was not sent, requeued. Probably will not be sent. :("
            }
        },
        "permissions": {
            "noActionsMapFound": {
                "error": "No actions map found, please call permissions.init() before use."
            }
        },
        "require-tree": {
            "couldNotReadPackageJson": {
                "error": "Could not read package.json file"
            },
            "nameOrVersionMissing": {
                "error": "\"name\" or \"version\" is missing from theme package.json file."
            },
            "themePackageJsonMalformed": {
                "error": "Theme package.json file is malformed."
            },
            "foundThemeWithNoPackageJson": {
                "error": "Found a theme with no package.json file.",
                "context": "Theme name: {theme}"
            }
    },
        "update-check": {
            
            "checkingForUpdatesFailed": {
            
                "error": "Checking for updates failed, your blog will continue to function.",
                "help": "If you get this error repeatedly, please seek help from https://ghost.org/forum."
            },
            "unableToDecodeUpdateResponse": {
                "error": "Unable to decode update response"
            
            }
        
        }
        
    },
    "warnings": {
        "index": {
            "usingDirectMethodToSendEmail": "Ghost is attempting to use a direct method to send e-mail. \nIt is recommended that you explicitly configure an e-mail service.",
            "unableToSendEmail": "Ghost is currently unable to send e-mail."
        },
        "helpers": {
            "foreach": {
                "iteratorNeeded": "Need to pass an iterator to #foreach"
            },
            "has": {
                "invalidAttribute": "Invalid or no attribute given to has helper"
            },
            "index": {
                "missingHelper": "Missing helper: '{arg}'"
            },
            "is": {
                "invalidAttribute": "Invalid or no attribute given to is helper"
            },
            "navigation": {
                "invalidData": "navigation data is not an object or is a function",
                "valuesMustBeDefined": "All values must be defined for label, url and current",
                "valuesMustBeString": "Invalid value, Url and Label must be strings"
            },
            "pagination": {
                "invalidData": "pagination data is not an object or is a function",
                "valuesMustBeDefined": "All values must be defined for page, pages, limit and total",
                "nextPrevValuesMustBeNumeric": "Invalid value, Next/Prev must be a number",
                "valuesMustBeNumeric": "Invalid value, check page, pages, limit and total are numbers"
            },
            "plural": {
                "valuesMustBeDefined": "All values must be defined for empty, singular and plural"
            },
            "template": {
                "templateNotFound": "Template {name} not found."
            }
        }
    },
    "notices": {
        "controllers": {
            "newVersionAvailable": "Ghost {version} is available! Hot Damn. {link} to upgrade."
        },
        "index": {
            "welcomeToGhost": "Welcome to Ghost.",
            "youAreRunningUnderEnvironment": "You're running under the <strong> {environment} </strong> environment.",
            "yourURLisSetTo": "Your URL is set to <strong> {url} </strong>."
        },
        "httpServer": {
            "cantTouchThis": "Can't touch this",
            "ghostIsRunning": "Ghost is running...",
            "yourBlogIsAvailableOn": "\nYour blog is now available on {url}",
            "ctrlCToShutDown": "\nCtrl+C to shut down",
            "ghostIsRunningIn": "Ghost is running in {envmt} ...",
            "listeningOn": "\nListening on",
            "urlConfiguredAs": "\nUrl configured as: {url}",
            "ghostHasShutdown": "\nGhost has shut down",
            "yourBlogIsNowOffline": "\nYour blog is now offline",
            "ghostWasRunningFor": "\nGhost was running for",
            "ghostIsClosingConnections": "Ghost is closing connections"
        },
        
        "mail": {
            "messageAcceptedByMailServer": "Message was accepted by the mail server. Make sure to check inbox and spam folders. :)"
        
        }
    }
}
