{
  "stats": {
    "suites": 196,
    "tests": 835,
    "passes": 835,
    "pending": 0,
    "failures": 0,
    "start": "2023-04-11T05:50:46.317Z",
    "end": "2023-04-11T05:52:28.163Z",
    "duration": 101846
  },
  "tests": [
    {
      "title": "Can request actions for resource",
      "fullTitle": "Actions API Can request actions for resource",
      "duration": 2226,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns comments in activity feed",
      "fullTitle": "Activity Feed API Returns comments in activity feed",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns click events in activity feed",
      "fullTitle": "Activity Feed API Returns click events in activity feed",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns feedback events in activity feed",
      "fullTitle": "Activity Feed API Returns feedback events in activity feed",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns signup events in activity feed",
      "fullTitle": "Activity Feed API Returns signup events in activity feed",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns email sent events in activity feed",
      "fullTitle": "Activity Feed API Returns email sent events in activity feed",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns email delivered events in activity feed",
      "fullTitle": "Activity Feed API Returns email delivered events in activity feed",
      "duration": 26,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns email opened events in activity feed",
      "fullTitle": "Activity Feed API Returns email opened events in activity feed",
      "duration": 38,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter events by post id",
      "fullTitle": "Activity Feed API Can filter events by post id",
      "duration": 50,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can limit events",
      "fullTitle": "Activity Feed API Can limit events",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use NQL OR for type only",
      "fullTitle": "Activity Feed API Filter splitting Can use NQL OR for type only",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot combine type filter with OR filter",
      "fullTitle": "Activity Feed API Filter splitting Cannot combine type filter with OR filter",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can only combine type and other filters at the root level",
      "fullTitle": "Activity Feed API Filter splitting Can only combine type and other filters at the root level",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use OR as long as it is not combined with type",
      "fullTitle": "Activity Feed API Filter splitting Can use OR as long as it is not combined with type",
      "duration": 42,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can AND two ORs",
      "fullTitle": "Activity Feed API Filter splitting Can AND two ORs",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can do filter based pagination for all posts",
      "fullTitle": "Activity Feed API Filter-based pagination Can do filter based pagination for all posts",
      "duration": 53,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can do filter based pagination for one post",
      "fullTitle": "Activity Feed API Filter-based pagination Can do filter based pagination for one post",
      "duration": 73,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can do filter based pagination for aggregated clicks for one post",
      "fullTitle": "Activity Feed API Filter-based pagination Can do filter based pagination for aggregated clicks for one post",
      "duration": 68,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can do filter based pagination for aggregated clicks for all posts",
      "fullTitle": "Activity Feed API Filter-based pagination Can do filter based pagination for aggregated clicks for all posts",
      "duration": 81,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can retrieve config and all expected properties",
      "fullTitle": "Config API can retrieve config and all expected properties",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a boolean when it is configured",
      "fullTitle": "Config API mailgunIsConfigured is a boolean when it is configured",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a boolean when it is not configured",
      "fullTitle": "Config API mailgunIsConfigured is a boolean when it is not configured",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can fetch settings for current theme",
      "fullTitle": "Custom Theme Settings API Browse can fetch settings for current theme",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update all settings for current theme",
      "fullTitle": "Custom Theme Settings API Edit can update all settings for current theme",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update some settings",
      "fullTitle": "Custom Theme Settings API Edit can update some settings",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors for unknown key",
      "fullTitle": "Custom Theme Settings API Edit errors for unknown key",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors for invalid select value",
      "fullTitle": "Custom Theme Settings API Edit errors for invalid select value",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export a JSON database",
      "fullTitle": "DB API Can export a JSON database",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete all content",
      "fullTitle": "DB API Can delete all content",
      "duration": 81,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can trigger external media inliner",
      "fullTitle": "DB API Can trigger external media inliner",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can't retrieve for non existent post",
      "fullTitle": "Email Preview API Read can't retrieve for non existent post",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read post email preview with fields",
      "fullTitle": "Email Preview API Read can read post email preview with fields",
      "duration": 119,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read post email preview with email card and replacements",
      "fullTitle": "Email Preview API Read can read post email preview with email card and replacements",
      "duration": 74,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has custom content transformations for email compatibility",
      "fullTitle": "Email Preview API Read has custom content transformations for email compatibility",
      "duration": 68,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uses the posts newsletter by default",
      "fullTitle": "Email Preview API Read uses the posts newsletter by default",
      "duration": 92,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uses the newsletter provided through ?newsletter=slug",
      "fullTitle": "Email Preview API Read uses the newsletter provided through ?newsletter=slug",
      "duration": 125,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can send test email",
      "fullTitle": "Email Preview API As Owner can send test email",
      "duration": 57,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can send test email",
      "fullTitle": "Email Preview API As Admin can send test email",
      "duration": 66,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can send test email",
      "fullTitle": "Email Preview API As Editor can send test email",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot send test email",
      "fullTitle": "Email Preview API As Author cannot send test email",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot send test email",
      "fullTitle": "Email Preview API As Contributor cannot send test email",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse emails",
      "fullTitle": "Emails API Can browse emails",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read an email",
      "fullTitle": "Emails API Can read an email",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retry a failed email",
      "fullTitle": "Emails API Can retry a failed email",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse email batches",
      "fullTitle": "Emails API Can browse email batches",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse email batches with recipient count",
      "fullTitle": "Emails API Can browse email batches with recipient count",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all email failures",
      "fullTitle": "Emails API Can browse all email failures",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse permanent email failures",
      "fullTitle": "Emails API Can browse permanent email failures",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse temporary email failures",
      "fullTitle": "Emails API Can browse temporary email failures",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse email failures with includes",
      "fullTitle": "Emails API Can browse email failures with includes",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does default replacements on the HTML body of an old email",
      "fullTitle": "Emails API Does default replacements on the HTML body of an old email",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request Explore data",
      "fullTitle": "Explore API Read Can request Explore data",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a file",
      "fullTitle": "Files API Can upload a file",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a png",
      "fullTitle": "Images API Can upload a png",
      "duration": 48,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a jpg",
      "fullTitle": "Images API Can upload a jpg",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a gif",
      "fullTitle": "Images API Can upload a gif",
      "duration": 37,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a webp",
      "fullTitle": "Images API Can upload a webp",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a svg",
      "fullTitle": "Images API Can upload a svg",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a square profile image",
      "fullTitle": "Images API Can upload a square profile image",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not upload a json file",
      "fullTitle": "Images API Can not upload a json file",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not upload a file without extension",
      "fullTitle": "Images API Can not upload a file without extension",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not upload a json file with image mime type",
      "fullTitle": "Images API Can not upload a json file with image mime type",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not upload a json file with image file extension",
      "fullTitle": "Images API Can not upload a json file with image file extension",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload multiple images with the same name",
      "fullTitle": "Images API Can upload multiple images with the same name",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload image with number suffix",
      "fullTitle": "Images API Can upload image with number suffix",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Trims _o suffix from uploaded files",
      "fullTitle": "Images API Trims _o suffix from uploaded files",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use _o in uploaded file name, as long as it is not at the end",
      "fullTitle": "Images API Can use _o in uploaded file name, as long as it is not at the end",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload around midnight of month change",
      "fullTitle": "Images API Can upload around midnight of month change",
      "duration": 70,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all integrations",
      "fullTitle": "Integrations API Can browse all integrations",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not read internal integration",
      "fullTitle": "Integrations API Can not read internal integration",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully create a single integration with auto generated content and admin api key",
      "fullTitle": "Integrations API Can successfully create a single integration with auto generated content and admin api key",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully create a single integration with a webhook",
      "fullTitle": "Integrations API Can successfully create a single integration with a webhook",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully get a created integration",
      "fullTitle": "Integrations API Can successfully get a created integration",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully get *all* created integrations with api_keys",
      "fullTitle": "Integrations API Can successfully get *all* created integrations with api_keys",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully edit a created integration",
      "fullTitle": "Integrations API Can successfully edit a created integration",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully refresh an integration api key",
      "fullTitle": "Integrations API Can successfully refresh an integration api key",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully add and delete a created integrations webhooks",
      "fullTitle": "Integrations API Can successfully add and delete a created integrations webhooks",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully delete a created integration",
      "fullTitle": "Integrations API Can successfully delete a created integration",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't see Self-Serve or any other integration",
      "fullTitle": "Integrations API As Administrator Can't see Self-Serve or any other integration",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch all invites",
      "fullTitle": "Invites API Can fetch all invites",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read an invitation by id",
      "fullTitle": "Invites API Can read an invitation by id",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a new invite",
      "fullTitle": "Invites API Can add a new invite",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy an existing invite",
      "fullTitle": "Invites API Can destroy an existing invite",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot destroy an non-existent invite",
      "fullTitle": "Invites API Cannot destroy an non-existent invite",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not access endpoint without a token header",
      "fullTitle": "Admin API key authentication Can not access endpoint without a token header",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not access endpoint with a wrong endpoint token",
      "fullTitle": "Admin API key authentication Can not access endpoint with a wrong endpoint token",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can access browse endpoint with correct token",
      "fullTitle": "Admin API key authentication Can access browse endpoint with correct token",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create post",
      "fullTitle": "Admin API key authentication Can create post",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read users",
      "fullTitle": "Admin API key authentication Can read users",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Blocks the request when host limit is in place for custom integrations",
      "fullTitle": "Admin API key authentication Host Settings: custom integration limits Blocks the request when host limit is in place for custom integrations",
      "duration": 98,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with no labels",
      "fullTitle": "Labels API Can browse with no labels",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add",
      "fullTitle": "Labels API Can add",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when adding label with the same name",
      "fullTitle": "Labels API Errors when adding label with the same name",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with member count",
      "fullTitle": "Labels API Can browse with member count",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read by slug and edit",
      "fullTitle": "Labels API Can read by slug and edit",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy",
      "fullTitle": "Labels API Can destroy",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot destroy non-existent label",
      "fullTitle": "Labels API Cannot destroy non-existent label",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all links",
      "fullTitle": "Links API Can browse all links",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk update multiple links with same site redirect",
      "fullTitle": "Links API Can bulk update multiple links with same site redirect",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk update links with external redirect",
      "fullTitle": "Links API Can bulk update links with external redirect",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can call bulk update link with 0 matches",
      "fullTitle": "Links API Can call bulk update link with 0 matches",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a MP4",
      "fullTitle": "Media API media/upload Can upload a MP4",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a WebM without a thumbnail",
      "fullTitle": "Media API media/upload Can upload a WebM without a thumbnail",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload an Ogg",
      "fullTitle": "Media API media/upload Can upload an Ogg",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload an mp3",
      "fullTitle": "Media API media/upload Can upload an mp3",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload an m4a with audio/mp4 content type",
      "fullTitle": "Media API media/upload Can upload an m4a with audio/mp4 content type",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload an m4a with audio/x-m4a content type",
      "fullTitle": "Media API media/upload Can upload an m4a with audio/x-m4a content type",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Rejects non-media file type",
      "fullTitle": "Media API media/upload Rejects non-media file type",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update existing thumbnail",
      "fullTitle": "Media API media/thumbnail/upload Can update existing thumbnail",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create new thumbnail based on parent media URL without existing thumbnail",
      "fullTitle": "Media API media/thumbnail/upload Can create new thumbnail based on parent media URL without existing thumbnail",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export tiers",
      "fullTitle": "Members API — exportCSV Can export tiers",
      "duration": 62,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export a member without tiers",
      "fullTitle": "Members API — exportCSV Can export a member without tiers",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export labels",
      "fullTitle": "Members API — exportCSV Can export labels",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export comped",
      "fullTitle": "Members API — exportCSV Can export comped",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export newsletters",
      "fullTitle": "Members API — exportCSV Can export newsletters",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export customer id",
      "fullTitle": "Members API — exportCSV Can export customer id",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can import CSV",
      "fullTitle": "Members Importer API Can import CSV",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members with filter",
      "fullTitle": "Members Importer API Can bulk unsubscribe members with filter",
      "duration": 105,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk add and remove labels to members with filter",
      "fullTitle": "Members Importer API Can bulk add and remove labels to members with filter",
      "duration": 106,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch members who are subscribed",
      "fullTitle": "Members API - With Newsletters Can fetch members who are subscribed",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch members who are NOT subscribed",
      "fullTitle": "Members API - With Newsletters Can fetch members who are NOT subscribed",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch members who are subscribed",
      "fullTitle": "Members API - With Newsletters - compat mode Can fetch members who are subscribed",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch members who are NOT subscribed",
      "fullTitle": "Members API - With Newsletters - compat mode Can fetch members who are NOT subscribed",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can do auth",
      "fullTitle": "Members Stripe Connect API can do auth",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Add should fail when comped flag is passed in but Stripe is not enabled",
      "fullTitle": "Members API without Stripe Add should fail when comped flag is passed in but Stripe is not enabled",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to a post",
      "fullTitle": "Members API - member attribution Can read member attributed to a post",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to a page",
      "fullTitle": "Members API - member attribution Can read member attributed to a page",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to a tag",
      "fullTitle": "Members API - member attribution Can read member attributed to a tag",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to an author",
      "fullTitle": "Members API - member attribution Can read member attributed to an author",
      "duration": 26,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to an url",
      "fullTitle": "Members API - member attribution Can read member attributed to an url",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns sign up attributions of all types in activity feed",
      "fullTitle": "Members API - member attribution Returns sign up attributions of all types in activity feed",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse",
      "fullTitle": "Members API Can browse",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with filter",
      "fullTitle": "Members API Can browse with filter",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by signup attribution",
      "fullTitle": "Members API Can filter by signup attribution",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by signup attribution",
      "fullTitle": "Members API Can filter by signup attribution",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with search",
      "fullTitle": "Members API Can browse with search",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by paid status",
      "fullTitle": "Members API Can filter by paid status",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by tier id",
      "fullTitle": "Members API Can filter by tier id",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter using contains operators",
      "fullTitle": "Members API Can filter using contains operators",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can ignore any unknown includes",
      "fullTitle": "Members API Can ignore any unknown includes",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can order by email_open_rate",
      "fullTitle": "Members API Can order by email_open_rate",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Search by case-insensitive name egg receives member with name Mr Egg",
      "fullTitle": "Members API Search by case-insensitive name egg receives member with name Mr Egg",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Search by case-insensitive email MEMBER2 receives member with email member2@test.com",
      "fullTitle": "Members API Search by case-insensitive email MEMBER2 receives member with email member2@test.com",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Search for paid members retrieves member with email paid@test.com",
      "fullTitle": "Members API Search for paid members retrieves member with email paid@test.com",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Search for non existing member returns empty result set",
      "fullTitle": "Members API Search for non existing member returns empty result set",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read",
      "fullTitle": "Members API Can read",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read and include email_recipients",
      "fullTitle": "Members API Can read and include email_recipients",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read and include tiers",
      "fullTitle": "Members API Can read and include tiers",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add",
      "fullTitle": "Members API Can add",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a member and trigger host email verification limits",
      "fullTitle": "Members API Can add a member and trigger host email verification limits",
      "duration": 158,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add and send a signup confirmation email",
      "fullTitle": "Members API Can add and send a signup confirmation email",
      "duration": 60,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Add should fail when passing incorrect email_type query parameter",
      "fullTitle": "Members API Add should fail when passing incorrect email_type query parameter",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add complimentary subscription (out of date)",
      "fullTitle": "Members API Can add complimentary subscription (out of date)",
      "duration": 66,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add complimentary subscription by assigning a product to a member",
      "fullTitle": "Members API Can add complimentary subscription by assigning a product to a member",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can end a complimentary subscription by removing a product from a member",
      "fullTitle": "Members API Can end a complimentary subscription by removing a product from a member",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a new member with a product (complimentary)",
      "fullTitle": "Members API Can create a new member with a product (complimentary)",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a member with an existing complimentary subscription",
      "fullTitle": "Members API Can create a member with an existing complimentary subscription",
      "duration": 59,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a member with an existing paid subscription",
      "fullTitle": "Members API Can create a member with an existing paid subscription",
      "duration": 54,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns an identical member format for read, edit and browse",
      "fullTitle": "Members API Returns an identical member format for read, edit and browse",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot add complimentary subscriptions to a member with an active subscription",
      "fullTitle": "Members API Cannot add complimentary subscriptions to a member with an active subscription",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot remove non complimentary subscriptions directly from a member",
      "fullTitle": "Members API Cannot remove non complimentary subscriptions directly from a member",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can remove a complimentary subscription directly from a member with other active subscriptions",
      "fullTitle": "Members API Can remove a complimentary subscription directly from a member with other active subscriptions",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can keep tiers unchanged when modifying a paid member",
      "fullTitle": "Members API Can keep tiers unchanged when modifying a paid member",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit by id",
      "fullTitle": "Members API Can edit by id",
      "duration": 40,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot edit a non-existing id with newsletters",
      "fullTitle": "Members API Cannot edit a non-existing id with newsletters",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot edit a non-existing id",
      "fullTitle": "Members API Cannot edit a non-existing id",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can subscribe to a newsletter",
      "fullTitle": "Members API Can subscribe to a newsletter",
      "duration": 59,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Subscribes to default newsletters",
      "fullTitle": "Members API Subscribes to default newsletters",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a subscription",
      "fullTitle": "Members API Can add a subscription",
      "duration": 79,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a subscription",
      "fullTitle": "Members API Can edit a subscription",
      "duration": 99,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy",
      "fullTitle": "Members API Can destroy",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot delete a non-existent member",
      "fullTitle": "Members API Cannot delete a non-existent member",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export CSV",
      "fullTitle": "Members API Can export CSV",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export a filtered CSV",
      "fullTitle": "Members API Can export a filtered CSV",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a member without cancelling Stripe Subscription",
      "fullTitle": "Members API Can delete a member without cancelling Stripe Subscription",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a member while cancelling Stripe Subscription",
      "fullTitle": "Members API Can delete a member while cancelling Stripe Subscription",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch member counts stats",
      "fullTitle": "Members API Can fetch member counts stats",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when fetching stats with unknown days param value",
      "fullTitle": "Members API Errors when fetching stats with unknown days param value",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter on newsletter slug",
      "fullTitle": "Members API Can filter on newsletter slug",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter on tier slug",
      "fullTitle": "Members API Can filter on tier slug",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add and edit with custom newsletters",
      "fullTitle": "Members API Can add and edit with custom newsletters",
      "duration": 44,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Setting subscribed when editing a member won't reset to default newsletters",
      "fullTitle": "Members API Setting subscribed when editing a member won't reset to default newsletters",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding newsletters to member with no subscriptions works even with subscribed false",
      "fullTitle": "Members API Adding newsletters to member with no subscriptions works even with subscribed false",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Updating member data without newsletters does not change newsletters",
      "fullTitle": "Members API Updating member data without newsletters does not change newsletters",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Updating newsletter subscriptions does not unsubscribe member from archived newsletter",
      "fullTitle": "Members API Updating newsletter subscriptions does not unsubscribe member from archived newsletter",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add and send a signup confirmation email (old)",
      "fullTitle": "Members API Can add and send a signup confirmation email (old)",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a member that is not subscribed (old)",
      "fullTitle": "Members API Can add a member that is not subscribed (old)",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can unsubscribe by setting (old) subscribed property to false",
      "fullTitle": "Members API Can unsubscribe by setting (old) subscribed property to false",
      "duration": 37,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can subscribe by setting (old) subscribed property to true",
      "fullTitle": "Members API Can subscribe by setting (old) subscribed property to true",
      "duration": 37,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members with filter",
      "fullTitle": "Members API Bulk operations Can bulk unsubscribe members with filter",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members from specific newsletter",
      "fullTitle": "Members API Bulk operations Can bulk unsubscribe members from specific newsletter",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members with deprecated subscribed filter",
      "fullTitle": "Members API Bulk operations Can bulk unsubscribe members with deprecated subscribed filter",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members with deprecated subscribed filter (actual)",
      "fullTitle": "Members API Bulk operations Can bulk unsubscribe members with deprecated subscribed filter (actual)",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk delete a label from members",
      "fullTitle": "Members API Bulk operations Can bulk delete a label from members",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Doesn't delete labels apart from the passed label id",
      "fullTitle": "Members API Bulk operations Doesn't delete labels apart from the passed label id",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk delete a label from members with filters",
      "fullTitle": "Members API Bulk operations Can bulk delete a label from members with filters",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk delete members",
      "fullTitle": "Members API Bulk operations Can bulk delete members",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with limits",
      "fullTitle": "Mentions API Can browse with limits",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot browse when lab disabled",
      "fullTitle": "Mentions API Cannot browse when lab disabled",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse newsletters",
      "fullTitle": "Newsletters API Can browse newsletters",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read a newsletter",
      "fullTitle": "Newsletters API Can read a newsletter",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include members & posts counts when browsing newsletters",
      "fullTitle": "Newsletters API Can include members & posts counts when browsing newsletters",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include members & posts counts when reading a newsletter",
      "fullTitle": "Newsletters API Can include members & posts counts when reading a newsletter",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a newsletter",
      "fullTitle": "Newsletters API Can add a newsletter",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include members & posts counts when adding a newsletter",
      "fullTitle": "Newsletters API Can include members & posts counts when adding a newsletter",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add multiple newsletters",
      "fullTitle": "Newsletters API Can add multiple newsletters",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a newsletter - with custom sender_email",
      "fullTitle": "Newsletters API Can add a newsletter - with custom sender_email",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a newsletter - and subscribe existing members",
      "fullTitle": "Newsletters API Can add a newsletter - and subscribe existing members",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit newsletters",
      "fullTitle": "Newsletters API Can edit newsletters",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include members & posts counts when editing newsletters",
      "fullTitle": "Newsletters API Can include members & posts counts when editing newsletters",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a newsletters and update the sender_email when already set",
      "fullTitle": "Newsletters API Can edit a newsletters and update the sender_email when already set",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can verify property updates",
      "fullTitle": "Newsletters API Can verify property updates",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't add multiple newsletters with same name",
      "fullTitle": "Newsletters API Can't add multiple newsletters with same name",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a newsletter - with custom sender_email and subscribe existing members",
      "fullTitle": "Newsletters API Can add a newsletter - with custom sender_email and subscribe existing members",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't edit multiple newsletters to existing name",
      "fullTitle": "Newsletters API Can't edit multiple newsletters to existing name",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Request fails when newsletter limit is in place",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Request fails when newsletter limit is in place",
      "duration": 407,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding newsletter fails",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Adding newsletter fails",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding newsletter fails without transaction",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Adding newsletter fails without transaction",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding an archived newsletter doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Adding an archived newsletter doesn't fail",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Editing an active newsletter doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Editing an active newsletter doesn't fail",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Editing an archived newsletter doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Editing an archived newsletter doesn't fail",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Unarchiving a newsletter fails",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Unarchiving a newsletter fails",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Archiving a newsletter doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Archiving a newsletter doesn't fail",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding a newsletter now doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Adding a newsletter now doesn't fail",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add notification",
      "fullTitle": "Notifications API Can add notification",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete notification",
      "fullTitle": "Notifications API Can delete notification",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can fetch an embed",
      "fullTitle": "Oembed API can fetch an embed",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can fetch a bookmark with ?type=bookmark",
      "fullTitle": "Oembed API type: bookmark can fetch a bookmark with ?type=bookmark",
      "duration": 367,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "falls back to bookmark without ?type=embed and no oembed metatag",
      "fullTitle": "Oembed API type: bookmark falls back to bookmark without ?type=embed and no oembed metatag",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors with useful message when title is unavailable",
      "fullTitle": "Oembed API type: bookmark errors with useful message when title is unavailable",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors when fetched url is an IP address",
      "fullTitle": "Oembed API type: bookmark errors when fetched url is an IP address",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors when fetched url is incorrect",
      "fullTitle": "Oembed API type: bookmark errors when fetched url is incorrect",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "fetches url and follows redirects",
      "fullTitle": "Oembed API with unknown provider fetches url and follows redirects",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "fetches url and follows <link rel=\"alternate\">",
      "fullTitle": "Oembed API with unknown provider fetches url and follows <link rel=\"alternate\">",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "follows redirects when fetching <link rel=\"alternate\">",
      "fullTitle": "Oembed API with unknown provider follows redirects when fetching <link rel=\"alternate\">",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rejects invalid oembed responses",
      "fullTitle": "Oembed API with unknown provider rejects invalid oembed responses",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rejects unknown oembed types",
      "fullTitle": "Oembed API with unknown provider rejects unknown oembed types",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rejects invalid photo responses",
      "fullTitle": "Oembed API with unknown provider rejects invalid photo responses",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rejects invalid video responses",
      "fullTitle": "Oembed API with unknown provider rejects invalid video responses",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "strips unknown response fields",
      "fullTitle": "Oembed API with unknown provider strips unknown response fields",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching IPv4 addresses",
      "fullTitle": "Oembed API with unknown provider skips fetching IPv4 addresses",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching IPv6 addresses",
      "fullTitle": "Oembed API with unknown provider skips fetching IPv6 addresses",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching localhost",
      "fullTitle": "Oembed API with unknown provider skips fetching localhost",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching url that resolves to private IP",
      "fullTitle": "Oembed API with unknown provider skips fetching url that resolves to private IP",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "aborts fetching if a redirect resolves to private IP",
      "fullTitle": "Oembed API with unknown provider aborts fetching if a redirect resolves to private IP",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching <link rel=\"alternate\"> if it resolves to a private IP",
      "fullTitle": "Oembed API with unknown provider skips fetching <link rel=\"alternate\"> if it resolves to a private IP",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "falls back to bookmark card for WP oembeds",
      "fullTitle": "Oembed API with unknown provider falls back to bookmark card for WP oembeds",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "decodes non utf-8 charsets",
      "fullTitle": "Oembed API with unknown provider decodes non utf-8 charsets",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not fail on unknown charset",
      "fullTitle": "Oembed API with unknown provider does not fail on unknown charset",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Has no initial offers",
      "fullTitle": "Offers API Has no initial offers",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a new offer",
      "fullTitle": "Offers API Can add a new offer",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a new offer with minimal fields",
      "fullTitle": "Offers API Can add a new offer with minimal fields",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Slugifies offer codes",
      "fullTitle": "Offers API Slugifies offer codes",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a fixed offer",
      "fullTitle": "Offers API Can add a fixed offer",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a trial offer",
      "fullTitle": "Offers API Can add a trial offer",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot create offer with same code",
      "fullTitle": "Offers API Cannot create offer with same code",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot create offer with same slugified code",
      "fullTitle": "Offers API Cannot create offer with same slugified code",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot create offer with same name",
      "fullTitle": "Offers API Cannot create offer with same name",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse",
      "fullTitle": "Offers API Can browse",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can get a single offer",
      "fullTitle": "Offers API Can get a single offer",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can get a trial offer",
      "fullTitle": "Offers API Can get a trial offer",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit an offer",
      "fullTitle": "Offers API Can edit an offer",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer code to one that exists",
      "fullTitle": "Offers API Cannot update offer code to one that exists",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer code to one that exists after it is slugified",
      "fullTitle": "Offers API Cannot update offer code to one that exists after it is slugified",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer name to one that exists",
      "fullTitle": "Offers API Cannot update offer name to one that exists",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can archive an offer",
      "fullTitle": "Offers API Can archive an offer",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse archived",
      "fullTitle": "Offers API Can browse archived",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse active",
      "fullTitle": "Offers API Can browse active",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer cadence",
      "fullTitle": "Offers API Cannot update offer cadence",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer amount",
      "fullTitle": "Offers API Cannot update offer amount",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer tier",
      "fullTitle": "Offers API Cannot update offer tier",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve all pages",
      "fullTitle": "Pages API Can retrieve all pages",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve pages with lexical format",
      "fullTitle": "Pages API Can retrieve pages with lexical format",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a page",
      "fullTitle": "Pages API Can add a page",
      "duration": 47,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a page with mobiledoc",
      "fullTitle": "Pages API Can add a page with mobiledoc",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a page with lexical",
      "fullTitle": "Pages API Can add a page with lexical",
      "duration": 83,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't add a page with both mobiledoc and lexical",
      "fullTitle": "Pages API Can't add a page with both mobiledoc and lexical",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for public page",
      "fullTitle": "Pages API Can include free and paid tiers for public page",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for members only page",
      "fullTitle": "Pages API Can include free and paid tiers for members only page",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include only paid tier for paid page",
      "fullTitle": "Pages API Can include only paid tier for paid page",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include specific tier for page with tiers visibility",
      "fullTitle": "Pages API Can include specific tier for page with tiers visibility",
      "duration": 53,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update a page",
      "fullTitle": "Pages API Can update a page",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update a page with restricted access to specific tier",
      "fullTitle": "Pages API Can update a page with restricted access to specific tier",
      "duration": 46,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot get page via posts endpoint",
      "fullTitle": "Pages API Cannot get page via posts endpoint",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update page via posts endpoint",
      "fullTitle": "Pages API Cannot update page via posts endpoint",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a page",
      "fullTitle": "Pages API Can delete a page",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve all posts",
      "fullTitle": "Posts API Can retrieve all posts",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve multiple post formats",
      "fullTitle": "Posts API Can retrieve multiple post formats",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include single relation",
      "fullTitle": "Posts API Can include single relation",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter posts",
      "fullTitle": "Posts API Can filter posts",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns a validation error when unknown filter key is used",
      "fullTitle": "Posts API Returns a validation error when unknown filter key is used",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can paginate posts",
      "fullTitle": "Posts API Can paginate posts",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request a post by id",
      "fullTitle": "Posts API Can request a post by id",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request a post by id without newsletter",
      "fullTitle": "Posts API Can request a post by id without newsletter",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve a post by slug",
      "fullTitle": "Posts API Can retrieve a post by slug",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include relations for a single post",
      "fullTitle": "Posts API Can include relations for a single post",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a post",
      "fullTitle": "Posts API Can add a post",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for public post",
      "fullTitle": "Posts API Can include free and paid tiers for public post",
      "duration": 55,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for members only post",
      "fullTitle": "Posts API Can include free and paid tiers for members only post",
      "duration": 58,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include only paid tier for paid post",
      "fullTitle": "Posts API Can include only paid tier for paid post",
      "duration": 60,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include specific tier for post with tiers visibility",
      "fullTitle": "Posts API Can include specific tier for post with tiers visibility",
      "duration": 70,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update draft",
      "fullTitle": "Posts API Can update draft",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update and force re-render",
      "fullTitle": "Posts API Can update and force re-render",
      "duration": 40,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can unpublish a post",
      "fullTitle": "Posts API Can unpublish a post",
      "duration": 80,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't change the newsletter of a post from the post body",
      "fullTitle": "Posts API Can't change the newsletter of a post from the post body",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't change the newsletter of a post from the post body",
      "fullTitle": "Posts API Can't change the newsletter of a post from the post body",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot change the newsletter via body when adding",
      "fullTitle": "Posts API Cannot change the newsletter via body when adding",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot send to an archived newsletter",
      "fullTitle": "Posts API Cannot send to an archived newsletter",
      "duration": 44,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a post without email",
      "fullTitle": "Posts API Can publish a post without email",
      "duration": 105,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Interprets sent status as published for not email only posts",
      "fullTitle": "Posts API Interprets sent status as published for not email only posts",
      "duration": 107,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a post and send as email",
      "fullTitle": "Posts API Can publish a post and send as email",
      "duration": 121,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Interprets sent as published for a post with email",
      "fullTitle": "Posts API Interprets sent as published for a post with email",
      "duration": 123,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish an email_only post by setting status to published",
      "fullTitle": "Posts API Can publish an email_only post by setting status to published",
      "duration": 64,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish an email_only post with free filter",
      "fullTitle": "Posts API Can publish an email_only post with free filter",
      "duration": 72,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish an email_only post by setting the status to sent",
      "fullTitle": "Posts API Can publish an email_only post by setting the status to sent",
      "duration": 65,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a scheduled post",
      "fullTitle": "Posts API Can publish a scheduled post",
      "duration": 146,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a scheduled post with custom email segment",
      "fullTitle": "Posts API Can publish a scheduled post with custom email segment",
      "duration": 153,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a scheduled post without newsletter",
      "fullTitle": "Posts API Can publish a scheduled post without newsletter",
      "duration": 145,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a scheduled email only post",
      "fullTitle": "Posts API Can publish a scheduled email only post",
      "duration": 83,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't change the newsletter once it has been sent",
      "fullTitle": "Posts API Can't change the newsletter once it has been sent",
      "duration": 292,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot get post via pages endpoint",
      "fullTitle": "Posts API Cannot get post via pages endpoint",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update post via pages endpoint",
      "fullTitle": "Posts API Cannot update post via pages endpoint",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a post and send as email",
      "fullTitle": "Posts API As Author Can publish a post and send as email",
      "duration": 136,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish an email_only post",
      "fullTitle": "Posts API As Author Can publish an email_only post",
      "duration": 64,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Request fails when emails limit is in place",
      "fullTitle": "Posts API Host Settings: emails limits Request fails when emails limit is in place",
      "duration": 840,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse",
      "fullTitle": "Posts API Can browse",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with formats",
      "fullTitle": "Posts API Can browse with formats",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export",
      "fullTitle": "Posts API Export Can export",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export with order",
      "fullTitle": "Posts API Export Can export with order",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export with limit",
      "fullTitle": "Posts API Export Can export with limit",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export with filter",
      "fullTitle": "Posts API Export Can export with filter",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a post with mobiledoc",
      "fullTitle": "Posts API Create Can create a post with mobiledoc",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a post with lexical",
      "fullTitle": "Posts API Create Can create a post with lexical",
      "duration": 42,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors if both mobiledoc and lexical are present",
      "fullTitle": "Posts API Create Errors if both mobiledoc and lexical are present",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors with an invalid lexical state object",
      "fullTitle": "Posts API Create Errors with an invalid lexical state object",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update a post with mobiledoc",
      "fullTitle": "Posts API Update Can update a post with mobiledoc",
      "duration": 59,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update a post with lexical",
      "fullTitle": "Posts API Update Can update a post with lexical",
      "duration": 67,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy a post",
      "fullTitle": "Posts API Delete Can destroy a post",
      "duration": 48,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot delete a non-existent posts",
      "fullTitle": "Posts API Delete Cannot delete a non-existent posts",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Is rate limited to protect against brute forcing a users password",
      "fullTitle": "Sessions API Is rate limited to protect against brute forcing a users password",
      "duration": 73,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Is rate limited to protect against brute forcing whether a user exists",
      "fullTitle": "Sessions API Is rate limited to protect against brute forcing whether a user exists",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "download",
      "fullTitle": "Redirects API download",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "upload",
      "fullTitle": "Redirects API upload",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all roles",
      "fullTitle": "Roles API Can request all roles",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request roles which i am able to assign to other users",
      "fullTitle": "Roles API Can request roles which i am able to assign to other users",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can create session (log in)",
      "fullTitle": "Sessions API can create session (log in)",
      "duration": 64,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read session now the owner is logged in",
      "fullTitle": "Sessions API can read session now the owner is logged in",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can delete session (log out)",
      "fullTitle": "Sessions API can delete session (log out)",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors when reading session again now owner is not logged in",
      "fullTitle": "Sessions API errors when reading session again now owner is not logged in",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can download routes.yaml",
      "fullTitle": "Settings File API Can download routes.yaml",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload routes.yaml",
      "fullTitle": "Settings File API Can upload routes.yaml",
      "duration": 1022,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all settings",
      "fullTitle": "Settings API Browse Can request all settings",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request settings by group",
      "fullTitle": "Settings API Browse Can request settings by group",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Requesting core settings by group ignores the parameter and returns no settings",
      "fullTitle": "Settings API Browse Requesting core settings by group ignores the parameter and returns no settings",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a setting",
      "fullTitle": "Settings API Edit Can edit a setting",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "removes image size prefixes when setting the icon",
      "fullTitle": "Settings API Edit removes image size prefixes when setting the icon",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot edit uneditable settings",
      "fullTitle": "Settings API Edit cannot edit uneditable settings",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "editing members_support_address triggers email verification flow",
      "fullTitle": "Settings API Edit editing members_support_address triggers email verification flow",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not trigger email verification flow if members_support_address remains the same",
      "fullTitle": "Settings API Edit does not trigger email verification flow if members_support_address remains the same",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update members_support_address via token",
      "fullTitle": "Settings API verify key update can update members_support_address via token",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot update invalid keys via token",
      "fullTitle": "Settings API verify key update cannot update invalid keys via token",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can do disconnectStripeConnectIntegration",
      "fullTitle": "Settings API stripe connect can do disconnectStripeConnectIntegration",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can attempt to connect to stripe",
      "fullTitle": "Settings API stripe connect Can attempt to connect to stripe",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can retrieve config and all expected properties",
      "fullTitle": "Site API can retrieve config and all expected properties",
      "duration": 51,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can generate a slug",
      "fullTitle": "Slug API Can generate a slug",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add",
      "fullTitle": "Snippets API Can add",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse",
      "fullTitle": "Snippets API Can browse",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read",
      "fullTitle": "Snippets API Can read",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit",
      "fullTitle": "Snippets API Can edit",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy",
      "fullTitle": "Snippets API Can destroy",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot destroy non-existent snippet",
      "fullTitle": "Snippets API Cannot destroy non-existent snippet",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch member count history",
      "fullTitle": "Stats API Can fetch member count history",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch MRR history",
      "fullTitle": "Stats API Can fetch MRR history",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch subscriptions history",
      "fullTitle": "Stats API Subscriptions history Can fetch subscriptions history",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch history for free trials",
      "fullTitle": "Stats API Subscriptions history Can fetch history for free trials",
      "duration": 85,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch history for 3D secure payments",
      "fullTitle": "Stats API Subscriptions history Can fetch history for 3D secure payments",
      "duration": 89,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch attribution stats",
      "fullTitle": "Stats API Post attribution stats Can fetch attribution stats",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch attribution stats",
      "fullTitle": "Stats API Referrer source history stats Can fetch attribution stats",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all tags",
      "fullTitle": "Tag API Can request all tags",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can paginate tags",
      "fullTitle": "Tag API Can paginate tags",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read a tag",
      "fullTitle": "Tag API Can read a tag",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a tag",
      "fullTitle": "Tag API Can add a tag",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add an internal tag",
      "fullTitle": "Tag API Can add an internal tag",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a tag",
      "fullTitle": "Tag API Can edit a tag",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy a tag",
      "fullTitle": "Tag API Can destroy a tag",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy a non-existent tag",
      "fullTitle": "Tag API Can destroy a non-existent tag",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all available themes",
      "fullTitle": "Themes API Can request all available themes",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can download a theme",
      "fullTitle": "Themes API Can download a theme",
      "duration": 81,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch active theme",
      "fullTitle": "Themes API Can fetch active theme",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a valid theme",
      "fullTitle": "Themes API Can upload a valid theme",
      "duration": 99,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a theme",
      "fullTitle": "Themes API Can delete a theme",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a theme, which has warnings",
      "fullTitle": "Themes API Can upload a theme, which has warnings",
      "duration": 93,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can activate a theme",
      "fullTitle": "Themes API Can activate a theme",
      "duration": 87,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can download and install a theme from GitHub",
      "fullTitle": "Themes API Can download and install a theme from GitHub",
      "duration": 92,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can re-upload the active theme to override",
      "fullTitle": "Themes API Can re-upload the active theme to override",
      "duration": 131,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse Tiers",
      "fullTitle": "Tiers API Can browse Tiers",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when price is non-integer",
      "fullTitle": "Tiers API Errors when price is non-integer",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when price is negative",
      "fullTitle": "Tiers API Errors when price is negative",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when price is too large",
      "fullTitle": "Tiers API Errors when price is too large",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read Tiers",
      "fullTitle": "Tiers API Can read Tiers",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit visibility",
      "fullTitle": "Tiers API Can edit visibility",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can save with trial_days as null",
      "fullTitle": "Tiers API Can save with trial_days as null",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit tier properties and relations",
      "fullTitle": "Tiers API Can edit tier properties and relations",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a new tier",
      "fullTitle": "Tiers API Can create a new tier",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all users ordered by id",
      "fullTitle": "User API Can request all users ordered by id",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include user roles",
      "fullTitle": "User API Can include user roles",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can paginate users",
      "fullTitle": "User API Can paginate users",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve a user by id",
      "fullTitle": "User API Can retrieve a user by id",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve a user by slug",
      "fullTitle": "User API Can retrieve a user by slug",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve a user by email",
      "fullTitle": "User API Can retrieve a user by email",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can edit a user",
      "fullTitle": "User API can edit a user",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can edit a user fetched from the API",
      "fullTitle": "User API can edit a user fetched from the API",
      "duration": 53,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit user with empty roles data and does not change the role",
      "fullTitle": "User API Can edit user with empty roles data and does not change the role",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot edit user with invalid roles data",
      "fullTitle": "User API Cannot edit user with invalid roles data",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit user roles by name",
      "fullTitle": "User API Can edit user roles by name",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy an active user and transfer posts to the owner",
      "fullTitle": "User API Can destroy an active user and transfer posts to the owner",
      "duration": 670,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can transfer ownership to admin user",
      "fullTitle": "User API Can transfer ownership to admin user",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can change password and retain the session",
      "fullTitle": "User API Can change password and retain the session",
      "duration": 38,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read the user's Personal Token",
      "fullTitle": "User API Can read the user's Personal Token",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't read another user's Personal Token",
      "fullTitle": "User API Can't read another user's Personal Token",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can re-generate the user's Personal Token",
      "fullTitle": "User API Can re-generate the user's Personal Token",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a webhook",
      "fullTitle": "Webhooks API Can create a webhook",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Fails nicely when adding a duplicate webhook",
      "fullTitle": "Webhooks API Fails nicely when adding a duplicate webhook",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Fails nicely when creating an orphaned webhook",
      "fullTitle": "Webhooks API Fails nicely when creating an orphaned webhook",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a webhook",
      "fullTitle": "Webhooks API Can edit a webhook",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot edit a non-existent webhook",
      "fullTitle": "Webhooks API Cannot edit a non-existent webhook",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a webhook",
      "fullTitle": "Webhooks API Can delete a webhook",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot delete a non-existent webhook",
      "fullTitle": "Webhooks API Cannot delete a non-existent webhook",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request authors",
      "fullTitle": "Authors Content API Can request authors",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request authors including post count",
      "fullTitle": "Authors Content API Can request authors including post count",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request single author",
      "fullTitle": "Authors Content API Can request single author",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request author by id including post count",
      "fullTitle": "Authors Content API Can request author by id including post count",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not access without key",
      "fullTitle": "Content API key authentication Can not access without key",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can access with with valid key",
      "fullTitle": "Content API key authentication Can access with with valid key",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Blocks the request when host limit is in place for custom integrations",
      "fullTitle": "Content API key authentication Host Settings: custom integration limits Blocks the request when host limit is in place for custom integrations",
      "duration": 98,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request only active newsletters",
      "fullTitle": "Newsletters Content API Can request only active newsletters",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot override filters to fetch archived newsletters",
      "fullTitle": "Newsletters Content API Cannot override filters to fetch archived newsletters",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read offer details from id",
      "fullTitle": "Offers Content API Can read offer details from id",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request pages",
      "fullTitle": "Pages Content API Can request pages",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot request pages with mobiledoc or lexical formats",
      "fullTitle": "Pages Content API Cannot request pages with mobiledoc or lexical formats",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request page",
      "fullTitle": "Pages Content API Can request page",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for public post",
      "fullTitle": "Pages Content API Can include free and paid tiers for public post",
      "duration": 38,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for members only post",
      "fullTitle": "Pages Content API Can include free and paid tiers for members only post",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include only paid tier for paid post",
      "fullTitle": "Pages Content API Can include only paid tier for paid post",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include specific tier for page with tiers visibility",
      "fullTitle": "Pages Content API Can include specific tier for page with tiers visibility",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request posts",
      "fullTitle": "Posts Content API Can request posts",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot request mobiledoc or lexical formats",
      "fullTitle": "Posts Content API Cannot request mobiledoc or lexical formats",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter posts by tag",
      "fullTitle": "Posts Content API Can filter posts by tag",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter posts by authors",
      "fullTitle": "Posts Content API Can filter posts by authors",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request fields of posts",
      "fullTitle": "Posts Content API Can request fields of posts",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include relations",
      "fullTitle": "Posts Content API Can include relations",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request posts from different origin",
      "fullTitle": "Posts Content API Can request posts from different origin",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by published date",
      "fullTitle": "Posts Content API Can filter by published date",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request a single post",
      "fullTitle": "Posts Content API Can request a single post",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for public post",
      "fullTitle": "Posts Content API Can include free and paid tiers for public post",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for members only post",
      "fullTitle": "Posts Content API Can include free and paid tiers for members only post",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include only paid tier for paid post",
      "fullTitle": "Posts Content API Can include only paid tier for paid post",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include specific tier for post with tiers visibility",
      "fullTitle": "Posts Content API Can include specific tier for post with tiers visibility",
      "duration": 49,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use post excerpt as field",
      "fullTitle": "Posts Content API Can use post excerpt as field",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use post plaintext as field",
      "fullTitle": "Posts Content API Can use post plaintext as field",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adds ?ref tags",
      "fullTitle": "Posts Content API Adds ?ref tags",
      "duration": 50,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request settings",
      "fullTitle": "Settings Content API Can request settings",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request tags",
      "fullTitle": "Tags Content API Can request tags",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request tags with limit=all",
      "fullTitle": "Tags Content API Can request tags with limit=all",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can limit tags to receive",
      "fullTitle": "Tags Content API Can limit tags to receive",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include post count",
      "fullTitle": "Tags Content API Can include post count",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use multiple fields and have valid url fields",
      "fullTitle": "Tags Content API Can use multiple fields and have valid url fields",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use single url field and have valid url fields",
      "fullTitle": "Tags Content API Can use single url field and have valid url fields",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request only active tiers",
      "fullTitle": "Tiers Content API Can request only active tiers",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not allow to create a checkout session if the customerEmail is associated with a paid member",
      "fullTitle": "Create Stripe Checkout Session Does not allow to create a checkout session if the customerEmail is associated with a paid member",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a checkout session when using offers",
      "fullTitle": "Create Stripe Checkout Session Can create a checkout session when using offers",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a checkout session without passing a customerEmail",
      "fullTitle": "Create Stripe Checkout Session Can create a checkout session without passing a customerEmail",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does allow to create a checkout session if the customerEmail is not associated with a paid member",
      "fullTitle": "Create Stripe Checkout Session Does allow to create a checkout session if the customerEmail is not associated with a paid member",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does pass url attribution source to session metadata",
      "fullTitle": "Create Stripe Checkout Session Member attribution Does pass url attribution source to session metadata",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does pass post attribution source to session metadata",
      "fullTitle": "Create Stripe Checkout Session Member attribution Does pass post attribution source to session metadata",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Ignores attribution_* values in metadata",
      "fullTitle": "Create Stripe Checkout Session Member attribution Ignores attribution_* values in metadata",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add positive feedback",
      "fullTitle": "Members Feedback Can add positive feedback",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can change existing feedback",
      "fullTitle": "Members Feedback Can change existing feedback",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Allows authentication via session",
      "fullTitle": "Members Feedback Authentication Allows authentication via session",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for invalid score",
      "fullTitle": "Members Feedback Validation Throws for invalid score",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for invalid score type",
      "fullTitle": "Members Feedback Validation Throws for invalid score type",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for invalid uuid",
      "fullTitle": "Members Feedback Validation Throws for invalid uuid",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for nonexisting uuid",
      "fullTitle": "Members Feedback Validation Throws for nonexisting uuid",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for nonexisting post",
      "fullTitle": "Members Feedback Validation Throws for nonexisting post",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can not get member data",
      "fullTitle": "Comments API when not authenticated but enabled can not get member data",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update comment notifications",
      "fullTitle": "Comments API when not authenticated but enabled can update comment notifications",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can get member data",
      "fullTitle": "Comments API when authenticated can get member data",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update member expertise",
      "fullTitle": "Comments API when authenticated can update member expertise",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "trims whitespace from expertise",
      "fullTitle": "Comments API when authenticated trims whitespace from expertise",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update name",
      "fullTitle": "Comments API when authenticated can update name",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update comment notifications",
      "fullTitle": "Comments API when authenticated can update comment notifications",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can remove member from suppression list and resubscribe to default newsletters",
      "fullTitle": "Comments API when authenticated can remove member from suppression list and resubscribe to default newsletters",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when passed multiple emails",
      "fullTitle": "sendMagicLink Errors when passed multiple emails",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws an error when logging in to a email that does not exist",
      "fullTitle": "sendMagicLink Throws an error when logging in to a email that does not exist",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws an error when logging in to a email that does not exist (invite only)",
      "fullTitle": "sendMagicLink Throws an error when logging in to a email that does not exist (invite only)",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws an error when trying to sign up on an invite only site",
      "fullTitle": "sendMagicLink Throws an error when trying to sign up on an invite only site",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a valid magic link with tokenData, and without urlHistory",
      "fullTitle": "sendMagicLink Creates a valid magic link with tokenData, and without urlHistory",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a valid magic link from custom signup with redirection",
      "fullTitle": "sendMagicLink Creates a valid magic link from custom signup with redirection",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a valid magic link from custom signup with redirection disabled",
      "fullTitle": "sendMagicLink Creates a valid magic link from custom signup with redirection disabled",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "triggers email alert for free member signup",
      "fullTitle": "sendMagicLink triggers email alert for free member signup",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Converts the urlHistory to the attribution and stores it in the token",
      "fullTitle": "sendMagicLink Converts the urlHistory to the attribution and stores it in the token",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will not set a cookie if the token is invalid",
      "fullTitle": "Members Signin Will not set a cookie if the token is invalid",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will set a cookie if the token is valid",
      "fullTitle": "Members Signin Will set a cookie if the token is valid",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will redirect to the free welcome page for signup",
      "fullTitle": "Members Signin Will redirect to the free welcome page for signup",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will redirect to the paid welcome page for signup-paid",
      "fullTitle": "Members Signin Will redirect to the paid welcome page for signup-paid",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will redirect to the free welcome page for subscribe",
      "fullTitle": "Members Signin Will redirect to the free welcome page for subscribe",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a new member on signup",
      "fullTitle": "Members Signin Will create a new member on signup",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Allows a signin via a signup link",
      "fullTitle": "Members Signin Allows a signin via a signup link",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will not create a new member on signin",
      "fullTitle": "Members Signin Will not create a new member on signin",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Expires a token after 10 minutes of first usage",
      "fullTitle": "Members Signin Validity Period Expires a token after 10 minutes of first usage",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Expires a token after 3 uses",
      "fullTitle": "Members Signin Validity Period Expires a token after 3 uses",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Expires a token after 24 hours if never used",
      "fullTitle": "Members Signin Validity Period Expires a token after 24 hours if never used",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will rate limit member enumeration",
      "fullTitle": "Members Signin Rate limiting Will rate limit member enumeration",
      "duration": 82,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will clear rate limits for members auth",
      "fullTitle": "Members Signin Rate limiting Will clear rate limits for members auth",
      "duration": 61,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a member attribution if magic link contains an attribution source",
      "fullTitle": "Members Signin Member attribution Will create a member attribution if magic link contains an attribution source",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Responds with a 401 when the signature is invalid",
      "fullTitle": "Members API /webhooks/stripe/ Responds with a 401 when the signature is invalid",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Responds with a 200 to unknown events with valid signature",
      "fullTitle": "Members API /webhooks/stripe/ Responds with a 200 to unknown events with valid signature",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cancellation of paid subscriptions correctly",
      "fullTitle": "Members API Handling the end of subscriptions Handles cancellation of paid subscriptions correctly",
      "duration": 78,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a comlimentary subscription after canceling a paid subscription",
      "fullTitle": "Members API Handling the end of subscriptions Can create a comlimentary subscription after canceling a paid subscription",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cancellation of old fashioned comped subscriptions correctly",
      "fullTitle": "Members API Handling the end of subscriptions Handles cancellation of old fashioned comped subscriptions correctly",
      "duration": 73,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a member if one does not exist",
      "fullTitle": "Members API checkout.session.completed Will create a member if one does not exist",
      "duration": 53,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a member with default newsletter subscriptions",
      "fullTitle": "Members API checkout.session.completed Will create a member with default newsletter subscriptions",
      "duration": 42,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a member with signup newsletter preference",
      "fullTitle": "Members API checkout.session.completed Will create a member with signup newsletter preference",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not 500 if the member is unknown",
      "fullTitle": "Members API checkout.session.completed Does not 500 if the member is unknown",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Correctly includes monthly forever percentage discounts in MRR",
      "fullTitle": "Members API Discounts Correctly includes monthly forever percentage discounts in MRR",
      "duration": 78,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Correctly includes yearly forever percentage discounts in MRR",
      "fullTitle": "Members API Discounts Correctly includes yearly forever percentage discounts in MRR",
      "duration": 77,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Correctly includes monthly forever amount off discounts in MRR",
      "fullTitle": "Members API Discounts Correctly includes monthly forever amount off discounts in MRR",
      "duration": 76,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Correctly includes yearly forever amount off discounts in MRR",
      "fullTitle": "Members API Discounts Correctly includes yearly forever amount off discounts in MRR",
      "duration": 77,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not include repeating discounts in MRR",
      "fullTitle": "Members API Discounts Does not include repeating discounts in MRR",
      "duration": 77,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Also supports adding a discount to an existing subscription",
      "fullTitle": "Members API Discounts Also supports adding a discount to an existing subscription",
      "duration": 70,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Silently ignores an invalid offer id in metadata",
      "fullTitle": "Members API Discounts Silently ignores an invalid offer id in metadata",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "empty initial activity feed",
      "fullTitle": "Members API Member attribution empty initial activity feed",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with url attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with url attribution",
      "duration": 63,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with post attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with post attribution",
      "duration": 56,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with deleted post attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with deleted post attribution",
      "duration": 55,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with page attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with page attribution",
      "duration": 56,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with tag attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with tag attribution",
      "duration": 56,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with author attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with author attribution",
      "duration": 56,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent without attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent without attribution",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with empty attribution object",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with empty attribution object",
      "duration": 54,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns subscription created attributions in activity feed",
      "fullTitle": "Members API Member attribution Returns subscription created attributions in activity feed",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return a JWKS",
      "fullTitle": "Members .well-known GET /jwks.json should return a JWKS",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all comments of a post",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated Can browse all comments of a post",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot comment on a post",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot comment on a post",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot reply on a post",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot reply on a post",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot report a comment",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot report a comment",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot like a comment",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot like a comment",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot unlike a comment",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot unlike a comment",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can comment on a post",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can comment on a post",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all comments of a post",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can browse all comments of a post",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to your own comment",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can reply to your own comment",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can reply to a comment",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Limits returned replies to 3",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Limits returned replies to 3",
      "duration": 90,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment with www domain",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can reply to a comment with www domain",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment with custom support email",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can reply to a comment with custom support email",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can like a comment",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can like a comment",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot like a comment multiple times",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Cannot like a comment multiple times",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can like a reply",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can like a reply",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can return replies",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can return replies",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request last page of replies",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can request last page of replies",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can remove a like (unlike)",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can remove a like (unlike)",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot unlike a comment if it has not been liked",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Cannot unlike a comment if it has not been liked",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can report a comment",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can report a comment",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot report a comment twice",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Cannot report a comment twice",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a comment on a post",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can edit a comment on a post",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not edit a comment post_id",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not edit a comment post_id",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not edit a comment which does not belong to you",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not edit a comment which does not belong to you",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not edit a comment as a member who is not you",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not edit a comment as a member who is not you",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not reply to a reply",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not reply to a reply",
      "duration": 82,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not edit a replies parent",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not edit a replies parent",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch counts",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can fetch counts",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a comment, and it is redacted from",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can delete a comment, and it is redacted from",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not comment on a post",
      "fullTitle": "Comments API when commenting disabled Can not comment on a post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can comment on a post",
      "fullTitle": "Comments API when paid only commenting Members with access Can comment on a post",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment",
      "fullTitle": "Comments API when paid only commenting Members with access Can reply to a comment",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not comment on a post",
      "fullTitle": "Comments API when paid only commenting Members without access Can not comment on a post",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not reply to a comment",
      "fullTitle": "Comments API when paid only commenting Members without access Can not reply to a comment",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can comment on a post",
      "fullTitle": "Comments API Tier-only posts Members with access Can comment on a post",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment",
      "fullTitle": "Comments API Tier-only posts Members with access Can reply to a comment",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not comment on a post",
      "fullTitle": "Comments API Tier-only posts Members without access Can not comment on a post",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not reply to a comment",
      "fullTitle": "Comments API Tier-only posts Members without access Can not reply to a comment",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with content version header even when accept version header is NOT PRESENT",
      "fullTitle": "API Versioning Admin API responds with content version header even when accept version header is NOT PRESENT",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with current content version header when requested version is BEHIND current version and CAN respond",
      "fullTitle": "API Versioning Admin API responds with current content version header when requested version is BEHIND current version and CAN respond",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with current content version header when requested version is AHEAD and CAN respond",
      "fullTitle": "API Versioning Admin API responds with current content version header when requested version is AHEAD and CAN respond",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "allows invalid accept-version header",
      "fullTitle": "API Versioning Admin API allows invalid accept-version header",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with error requested version is AHEAD and CANNOT respond",
      "fullTitle": "API Versioning Admin API responds with error requested version is AHEAD and CANNOT respond",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with error when requested version is BEHIND and CANNOT respond",
      "fullTitle": "API Versioning Admin API responds with error when requested version is BEHIND and CANNOT respond",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with error and sends email ONCE when requested version is BEHIND and CANNOT respond multiple times",
      "fullTitle": "API Versioning Admin API responds with error and sends email ONCE when requested version is BEHIND and CANNOT respond multiple times",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with 404 error when the resource cannot be found",
      "fullTitle": "API Versioning Admin API responds with 404 error when the resource cannot be found",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does an internal rewrite for canary URLs with accept version set",
      "fullTitle": "API Versioning Admin API Does an internal rewrite for canary URLs with accept version set",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does an internal rewrite for v3 URL + POST with accept version set",
      "fullTitle": "API Versioning Admin API Does an internal rewrite for v3 URL + POST with accept version set",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with 406 for an unknown version with accept-version set ahead",
      "fullTitle": "API Versioning Admin API responds with 406 for an unknown version with accept-version set ahead",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with 406 for an unknown version with accept-version set behind",
      "fullTitle": "API Versioning Admin API responds with 406 for an unknown version with accept-version set behind",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with no content version header when accept version header is NOT PRESENT",
      "fullTitle": "API Versioning Content API responds with no content version header when accept version header is NOT PRESENT",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with current content version header when requested version is BEHIND current version and CAN respond",
      "fullTitle": "API Versioning Content API responds with current content version header when requested version is BEHIND current version and CAN respond",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does an internal rewrite with accept version set when version is included in the URL",
      "fullTitle": "API Versioning Content API Does an internal rewrite with accept version set when version is included in the URL",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with 404 error when the resource cannot be found",
      "fullTitle": "API Versioning Content API responds with 404 error when the resource cannot be found",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can receive a webmention",
      "fullTitle": "Webmentions (receiving) can receive a webmention",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "will update a mentions source metadata",
      "fullTitle": "Webmentions (receiving) will update a mentions source metadata",
      "duration": 26,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "will delete a mention when the target in Ghost was deleted",
      "fullTitle": "Webmentions (receiving) will delete a mention when the target in Ghost was deleted",
      "duration": 304,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can receive a webmention to homepage",
      "fullTitle": "Webmentions (receiving) can receive a webmention to homepage",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <a> link",
      "fullTitle": "Webmentions (receiving) can verify a webmention <a> link",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <a> link to post",
      "fullTitle": "Webmentions (receiving) can verify a webmention <a> link to post",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <a> link to post with tracking parameters",
      "fullTitle": "Webmentions (receiving) can verify a webmention <a> link to post with tracking parameters",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "marks as unverified if url not present on source",
      "fullTitle": "Webmentions (receiving) marks as unverified if url not present on source",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <img> link",
      "fullTitle": "Webmentions (receiving) can verify a webmention <img> link",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <video> link",
      "fullTitle": "Webmentions (receiving) can verify a webmention <video> link",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is rate limited against spamming mention requests",
      "fullTitle": "Webmentions (receiving) is rate limited against spamming mention requests",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "http://localhost should 404",
      "fullTitle": "Advanced URL Configurations Subdirectory config http://localhost should 404",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog should 301 to /blog/",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog should 301 to /blog/",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/ should 200",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/ should 200",
      "duration": 74,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/welcome/ should 200",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/welcome/ should 200",
      "duration": 82,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/welcome/ should 404",
      "fullTitle": "Advanced URL Configurations Subdirectory config /welcome/ should 404",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/tag/getting-started/ should 200",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/tag/getting-started/ should 200",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/tag/getting-started/ should 404",
      "fullTitle": "Advanced URL Configurations Subdirectory config /tag/getting-started/ should 404",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/welcome/amp/ should 200 if amp is enabled",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/welcome/amp/ should 200 if amp is enabled",
      "duration": 139,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/welcome/amp/ should 301",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/welcome/amp/ should 301",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/welcome/amp/ should 404",
      "fullTitle": "Advanced URL Configurations Subdirectory config /welcome/amp/ should 404",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve welcome post with old permalink structure",
      "fullTitle": "Custom Frontend routing serve welcome post with old permalink structure",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve welcome post with new permalink structure",
      "fullTitle": "Custom Frontend routing serve welcome post with new permalink structure",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve welcome post with new permalink structure and old date",
      "fullTitle": "Custom Frontend routing serve welcome post with new permalink structure and old date",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve rss",
      "fullTitle": "Custom Frontend routing serve rss",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve collection index",
      "fullTitle": "Custom Frontend routing serve collection index",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve tag",
      "fullTitle": "Custom Frontend routing serve tag",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not serve empty sitemaps",
      "fullTitle": "Custom Frontend routing should not serve empty sitemaps",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should 404 for unknown post",
      "fullTitle": "Default Frontend routing Error should 404 for unknown post",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should 404 for unknown file",
      "fullTitle": "Default Frontend routing Error should 404 for unknown file",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/ should respond with valid HTML",
      "fullTitle": "Default Frontend routing Main Routes / should respond with valid HTML",
      "duration": 38,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/author/ghost/ should respond with valid HTML",
      "fullTitle": "Default Frontend routing Main Routes /author/ghost/ should respond with valid HTML",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/tag/getting-started/ should respond with valid HTML",
      "fullTitle": "Default Frontend routing Main Routes /tag/getting-started/ should respond with valid HTML",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/welcome/ should respond with valid HTML",
      "fullTitle": "Default Frontend routing Single post /welcome/ should respond with valid HTML",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not work with date permalinks",
      "fullTitle": "Default Frontend routing Single post should not work with date permalinks",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect to editor",
      "fullTitle": "Default Frontend routing Post edit should redirect to editor",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should 404 for non-edit parameter",
      "fullTitle": "Default Frontend routing Post edit should 404 for non-edit parameter",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/edit/ should NOT redirect to the editor",
      "fullTitle": "Default Frontend routing Post edit Admin Redirects Disabled /edit/ should NOT redirect to the editor",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should respond with html for valid url",
      "fullTitle": "Default Frontend routing AMP post AMP Enabled should respond with html for valid url",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not work with date permalinks",
      "fullTitle": "Default Frontend routing AMP post AMP Enabled should not work with date permalinks",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/amp/ should redirect to regular post, including any query params",
      "fullTitle": "Default Frontend routing AMP post AMP Disabled /amp/ should redirect to regular post, including any query params",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should 301 redirect with CC=1year without slash",
      "fullTitle": "Default Frontend routing RSS should 301 redirect with CC=1year without slash",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should get 301 redirect with CC=1year to /rss/ from /feed/",
      "fullTitle": "Default Frontend routing RSS should get 301 redirect with CC=1year to /rss/ from /feed/",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/rss/ should serve an RSS feed",
      "fullTitle": "Default Frontend routing RSS /rss/ should serve an RSS feed",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/author/ghost/rss/ should serve an RSS feed",
      "fullTitle": "Default Frontend routing RSS /author/ghost/rss/ should serve an RSS feed",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/tag/getting-started/rss/ should serve an RSS feed",
      "fullTitle": "Default Frontend routing RSS /tag/getting-started/rss/ should serve an RSS feed",
      "duration": 26,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should retrieve theme assets",
      "fullTitle": "Default Frontend routing Static assets should retrieve theme assets",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should retrieve default robots.txt",
      "fullTitle": "Default Frontend routing Static assets should retrieve default robots.txt",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should retrieve default favicon.ico",
      "fullTitle": "Default Frontend routing Static assets should retrieve default favicon.ico",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap.xml",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap-posts.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap-posts.xml",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap-pages.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap-pages.xml",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap-tags.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap-tags.xml",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap-users.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap-users.xml",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap.xsl",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap.xsl",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/ should redirect to /private/",
      "fullTitle": "Default Frontend routing Private Blogging / should redirect to /private/",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/welcome/ should redirect to /private/",
      "fullTitle": "Default Frontend routing Private Blogging /welcome/ should redirect to /private/",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/private/?r=%2Fwelcome%2F should not redirect",
      "fullTitle": "Default Frontend routing Private Blogging /private/?r=%2Fwelcome%2F should not redirect",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect, NOT 404 for private route with extra path",
      "fullTitle": "Default Frontend routing Private Blogging should redirect, NOT 404 for private route with extra path",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should still serve private RSS feed",
      "fullTitle": "Default Frontend routing Private Blogging should still serve private RSS feed",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should still serve private tag RSS feed",
      "fullTitle": "Default Frontend routing Private Blogging should still serve private tag RSS feed",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect, NOT 404 for private tag RSS feed with extra path",
      "fullTitle": "Default Frontend routing Private Blogging should redirect, NOT 404 for private tag RSS feed with extra path",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect, NOT 404 for unknown private RSS feed",
      "fullTitle": "Default Frontend routing Private Blogging should redirect, NOT 404 for unknown private RSS feed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve private robots.txt",
      "fullTitle": "Default Frontend routing Private Blogging should serve private robots.txt",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should display email_only post",
      "fullTitle": "Frontend Routing: Email Routes should display email_only post",
      "duration": 44,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "404s for draft email only post",
      "fullTitle": "Frontend Routing: Email Routes 404s for draft email only post",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "404s known slug",
      "fullTitle": "Frontend Routing: Email Routes 404s known slug",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "404s unknown slug",
      "fullTitle": "Frontend Routing: Email Routes 404s unknown slug",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has valid fixtures",
      "fullTitle": "e2e {{#get}} helper has valid fixtures",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "not authenticated member",
      "fullTitle": "e2e {{#get}} helper {{access}} property not authenticated member",
      "duration": 37,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "free member",
      "fullTitle": "e2e {{#get}} helper {{access}} property free member",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "paid member",
      "fullTitle": "e2e {{#get}} helper {{access}} property paid member",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "comped member",
      "fullTitle": "e2e {{#get}} helper {{access}} property comped member",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tiers member not including tiers",
      "fullTitle": "e2e {{#get}} helper {{access}} property tiers member not including tiers",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tiers member including tiers",
      "fullTitle": "e2e {{#get}} helper {{access}} property tiers member including tiers",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tiers member with different product",
      "fullTitle": "e2e {{#get}} helper {{access}} property tiers member with different product",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has valid fixtures",
      "fullTitle": "e2e {{#next_post}} helper has valid fixtures",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property not authenticated member next members post",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property not authenticated member next paid post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property not authenticated member next tiers post",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property not authenticated member next public post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property free member next members post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property free member next paid post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property free member next tiers post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property free member next public post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property paid member next members post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property paid member next paid post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property paid member next tiers post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property paid member next public post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member next members post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member next paid post",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member next tiers post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member next public post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member with different product next members post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member with different product next paid post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member with different product next tiers post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member with different product next public post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return free",
      "fullTitle": "Front-end member stats  should return free",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return paid",
      "fullTitle": "Front-end member stats  should return paid",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return comped",
      "fullTitle": "Front-end member stats  should return comped",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return total",
      "fullTitle": "Front-end member stats  should return total",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error serving webhook endpoint without any parameters",
      "fullTitle": "Front-end members behavior Member routes should error serving webhook endpoint without any parameters",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should fail processing a webhook endpoint with stripe header",
      "fullTitle": "Front-end members behavior Member routes should fail processing a webhook endpoint with stripe header",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return no content for invalid token passed in session",
      "fullTitle": "Front-end members behavior Member routes should return no content for invalid token passed in session",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return no content when removing member sessions",
      "fullTitle": "Front-end members behavior Member routes should return no content when removing member sessions",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid member token on member data endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid member token on member data endpoint",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid data on member magic link endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid data on member magic link endpoint",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid data on members create checkout session endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid data on members create checkout session endpoint",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not throw 400 for using offer id on members create checkout session endpoint",
      "fullTitle": "Front-end members behavior Member routes should not throw 400 for using offer id on members create checkout session endpoint",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid data on members create update session endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid data on members create update session endpoint",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid subscription id on members create update session endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid subscription id on members create update session endpoint",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid data on members subscription endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid data on members subscription endpoint",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for fetching member newsletters with missing uuid",
      "fullTitle": "Front-end members behavior Member routes should error for fetching member newsletters with missing uuid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for fetching member newsletters with invalid uuid",
      "fullTitle": "Front-end members behavior Member routes should error for fetching member newsletters with invalid uuid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for updating member newsletters with missing uuid",
      "fullTitle": "Front-end members behavior Member routes should error for updating member newsletters with missing uuid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for updating member newsletters with invalid uuid",
      "fullTitle": "Front-end members behavior Member routes should error for updating member newsletters with invalid uuid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should fetch and update member newsletters with valid uuid",
      "fullTitle": "Front-end members behavior Member routes should fetch and update member newsletters with valid uuid",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve theme 404 on members endpoint",
      "fullTitle": "Front-end members behavior Member routes should serve theme 404 on members endpoint",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect invalid token on members endpoint",
      "fullTitle": "Front-end members behavior Member routes should redirect invalid token on members endpoint",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect with uuid and action param",
      "fullTitle": "Front-end members behavior Unsubscribe should redirect with uuid and action param",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should pass through an optional newsletter param",
      "fullTitle": "Front-end members behavior Unsubscribe should pass through an optional newsletter param",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should reject when missing a uuid",
      "fullTitle": "Front-end members behavior Unsubscribe should reject when missing a uuid",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read public post content",
      "fullTitle": "Front-end members behavior Content gating as non-member can read public post content",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read members post content",
      "fullTitle": "Front-end members behavior Content gating as non-member cannot read members post content",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read paid post content",
      "fullTitle": "Front-end members behavior Content gating as non-member cannot read paid post content",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read label-only post content",
      "fullTitle": "Front-end members behavior Content gating as non-member cannot read label-only post content",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as non-member cannot read product-only post content",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "doesn't generate a MemberPageView event",
      "fullTitle": "Front-end members behavior Content gating as non-member doesn't generate a MemberPageView event",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read public post content",
      "fullTitle": "Front-end members behavior Content gating as free member can read public post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read members post content",
      "fullTitle": "Front-end members behavior Content gating as free member can read members post content",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read paid post content",
      "fullTitle": "Front-end members behavior Content gating as free member cannot read paid post content",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read label-only post content",
      "fullTitle": "Front-end members behavior Content gating as free member cannot read label-only post content",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as free member cannot read product-only post content",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "generates a MemberPageView event",
      "fullTitle": "Front-end members behavior Content gating as free member with vip label generates a MemberPageView event",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read public post content",
      "fullTitle": "Front-end members behavior Content gating as paid member can read public post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read members post content",
      "fullTitle": "Front-end members behavior Content gating as paid member can read members post content",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read paid post content",
      "fullTitle": "Front-end members behavior Content gating as paid member can read paid post content",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read label-only post content",
      "fullTitle": "Front-end members behavior Content gating as paid member cannot read label-only post content",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as paid member can read product-only post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "generates a MemberPageView event",
      "fullTitle": "Front-end members behavior Content gating as paid member generates a MemberPageView event",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read public post content",
      "fullTitle": "Front-end members behavior Content gating as comped member can read public post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read members post content",
      "fullTitle": "Front-end members behavior Content gating as comped member can read members post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read paid post content",
      "fullTitle": "Front-end members behavior Content gating as comped member can read paid post content",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read label-only post content",
      "fullTitle": "Front-end members behavior Content gating as comped member cannot read label-only post content",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as comped member can read product-only post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as member with product can read product-only post content",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should display draft posts accessed via uuid",
      "fullTitle": "Frontend Routing: Preview Routes should display draft posts accessed via uuid",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect draft posts accessed via uuid and edit to admin post edit screen",
      "fullTitle": "Frontend Routing: Preview Routes should redirect draft posts accessed via uuid and edit to admin post edit screen",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect draft page accessed via uuid and edit to admin page edit screen",
      "fullTitle": "Frontend Routing: Preview Routes should redirect draft page accessed via uuid and edit to admin page edit screen",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect published posts to their live url",
      "fullTitle": "Frontend Routing: Preview Routes should redirect published posts to their live url",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "404s unknown uuids",
      "fullTitle": "Frontend Routing: Preview Routes 404s unknown uuids",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles same origin request",
      "fullTitle": "OPTIONS requests CORS headers in Admin API Handles same origin request",
      "duration": 79,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles no origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Admin API Handles no origin header request",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cross-domain origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Admin API Handles cross-domain origin header request",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles same origin request",
      "fullTitle": "OPTIONS requests CORS headers in Members API Handles same origin request",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles no origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Members API Handles no origin header request",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cross-domain origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Members API Handles cross-domain origin header request",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Responds with no referer vary header value when same referer",
      "fullTitle": "OPTIONS requests CORS headers in Frontend Responds with no referer vary header value when same referer",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not allow CORS with when no origin is present in the request",
      "fullTitle": "OPTIONS requests CORS headers in Frontend Does not allow CORS with when no origin is present in the request",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Responds with no referer vary header value when different referer",
      "fullTitle": "OPTIONS requests CORS headers in Frontend Responds with no referer vary header value when different referer",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles same origin request",
      "fullTitle": "OPTIONS requests CORS headers in Content API Handles same origin request",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles no origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Content API Handles no origin header request",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cross-domain origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Content API Handles cross-domain origin header request",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return 404 for unknown assets",
      "fullTitle": "Admin Routing Assets should return 404 for unknown assets",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should retrieve built assets",
      "fullTitle": "Admin Routing Assets should retrieve built assets",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect /GHOST/ to /ghost/",
      "fullTitle": "Admin Routing Admin Redirects should redirect /GHOST/ to /ghost/",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect admin access over non-HTTPS",
      "fullTitle": "Admin Routing Require HTTPS - redirect should redirect admin access over non-HTTPS",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should allow admin access over HTTPS",
      "fullTitle": "Admin Routing Require HTTPS - redirect should allow admin access over HTTPS",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serves assets in production",
      "fullTitle": "Admin Routing built template serves assets in production",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serves assets when not in production",
      "fullTitle": "Admin Routing built template serves assets when not in production",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "generates it's own ETag header from file contents",
      "fullTitle": "Admin Routing built template generates it's own ETag header from file contents",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Full test",
      "fullTitle": "Click Tracking Full test",
      "duration": 318,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves urls",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves urls",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves posts",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves posts",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves removed resources",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves removed resources",
      "duration": 211,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves pages",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves pages",
      "duration": 96,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves tags",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves tags",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves authors",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves authors",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves urls",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves urls",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves posts",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves posts",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves removed resources",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves removed resources",
      "duration": 123,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves pages",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves pages",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves tags",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves tags",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves authors",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves authors",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves urls",
      "fullTitle": "Member Attribution Service getAttribution for referrer resolves urls",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "New draft post created",
      "fullTitle": "Mentions Service Sending Service does not send when we expect it to not send New draft post created",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Email only post published",
      "fullTitle": "Mentions Service Sending Service does not send when we expect it to not send Email only post published",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Post without content",
      "fullTitle": "Mentions Service Sending Service does not send when we expect it to not send Post without content",
      "duration": 80,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "New draft page created",
      "fullTitle": "Mentions Service Sending Service does not send when we expect it to not send New draft page created",
      "duration": 82,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Newly published post (post.published)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Newly published post (post.published)",
      "duration": 98,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Edited published post (post.published.edited)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Edited published post (post.published.edited)",
      "duration": 171,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Unpublished post (post.unpublished)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Unpublished post (post.unpublished)",
      "duration": 179,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Newly published page (page.published)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Newly published page (page.published)",
      "duration": 68,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Edited published page (page.published.edited)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Edited published page (page.published.edited)",
      "duration": 120,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Unpublished post (post.unpublished)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Unpublished post (post.unpublished)",
      "duration": 187,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Sends for links that got removed from a post",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Sends for links that got removed from a post",
      "duration": 211,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Sends for links that got removed from a page",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Sends for links that got removed from a page",
      "duration": 137,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "New paid post",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send New paid post",
      "duration": 138,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Inits milestone service",
      "fullTitle": "Milestones Service Inits milestone service",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Runs ARR and Members milestone jobs",
      "fullTitle": "Milestones Service Runs ARR and Members milestone jobs",
      "duration": 423,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not run ARR milestones when Stripe is not live enabled",
      "fullTitle": "Milestones Service Does not run ARR milestones when Stripe is not live enabled",
      "duration": 279,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not send emails for milestones when imported members present",
      "fullTitle": "Milestones Service Does not send emails for milestones when imported members present",
      "duration": 197,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Always returns at least one currency",
      "fullTitle": "MRR Stats Service getCurrentMrr Always returns at least one currency",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can handle multiple currencies",
      "fullTitle": "MRR Stats Service getCurrentMrr Can handle multiple currencies",
      "duration": 50,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Increases MRR by 1 / 12 of yearly subscriptions",
      "fullTitle": "MRR Stats Service getCurrentMrr Increases MRR by 1 / 12 of yearly subscriptions",
      "duration": 50,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Increases MRR with monthly subscriptions",
      "fullTitle": "MRR Stats Service getCurrentMrr Increases MRR with monthly subscriptions",
      "duration": 49,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Floors results",
      "fullTitle": "MRR Stats Service getCurrentMrr Floors results",
      "duration": 362,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns deltas in ascending order",
      "fullTitle": "MRR Stats Service fetchAllDeltas Returns deltas in ascending order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return a JWKS",
      "fullTitle": ".well-known GET /jwks.json should return a JWKS",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "member.added event is triggered",
      "fullTitle": "member.* events member.added event is triggered",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "member.deleted event is triggered",
      "fullTitle": "member.* events member.deleted event is triggered",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "member.edited event is triggered",
      "fullTitle": "member.* events member.edited event is triggered",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.published event is triggered",
      "fullTitle": "page.* events page.published event is triggered",
      "duration": 144,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.added event is triggered",
      "fullTitle": "page.* events page.added event is triggered",
      "duration": 71,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.deleted event is triggered",
      "fullTitle": "page.* events page.deleted event is triggered",
      "duration": 146,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.edited event is triggered",
      "fullTitle": "page.* events page.edited event is triggered",
      "duration": 91,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.scheduled event is triggered",
      "fullTitle": "page.* events page.scheduled event is triggered",
      "duration": 93,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.published.edited event is triggered",
      "fullTitle": "page.* events page.published.edited event is triggered",
      "duration": 187,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.unpublished event is triggered",
      "fullTitle": "page.* events page.unpublished event is triggered",
      "duration": 171,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.tag.detached event is triggered",
      "fullTitle": "page.* events page.tag.detached event is triggered",
      "duration": 166,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.tag.attached event is triggered",
      "fullTitle": "page.* events page.tag.attached event is triggered",
      "duration": 140,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.rescheduled event is triggered",
      "fullTitle": "page.* events page.rescheduled event is triggered",
      "duration": 101,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.unscheduled event is triggered",
      "fullTitle": "page.* events page.unscheduled event is triggered",
      "duration": 98,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.published event is triggered",
      "fullTitle": "post.* events post.published event is triggered",
      "duration": 172,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.unpublished event is triggered",
      "fullTitle": "post.* events post.unpublished event is triggered",
      "duration": 175,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.added event is triggered",
      "fullTitle": "post.* events post.added event is triggered",
      "duration": 69,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.deleted event is triggered",
      "fullTitle": "post.* events post.deleted event is triggered",
      "duration": 116,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.scheduled event is triggered",
      "fullTitle": "post.* events post.scheduled event is triggered",
      "duration": 92,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.unscheduled event is triggered",
      "fullTitle": "post.* events post.unscheduled event is triggered",
      "duration": 103,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.tag.attached event is triggered",
      "fullTitle": "post.* events post.tag.attached event is triggered",
      "duration": 150,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.tag.detached event is triggered",
      "fullTitle": "post.* events post.tag.detached event is triggered",
      "duration": 176,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.edited event is triggered",
      "fullTitle": "post.* events post.edited event is triggered",
      "duration": 89,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.published.edited event is triggered",
      "fullTitle": "post.* events post.published.edited event is triggered",
      "duration": 155,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.rescheduled event is triggered",
      "fullTitle": "post.* events post.rescheduled event is triggered",
      "duration": 102,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "site.changed event is triggered",
      "fullTitle": "site.* events site.changed event is triggered",
      "duration": 120,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tag.added event is triggered",
      "fullTitle": "tag.* events tag.added event is triggered",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tag.deleted event is triggered",
      "fullTitle": "tag.* events tag.deleted event is triggered",
      "duration": 57,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tag.edited event is triggered",
      "fullTitle": "tag.* events tag.edited event is triggered",
      "duration": 61,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [],
  "passes": [
    {
      "title": "Can request actions for resource",
      "fullTitle": "Actions API Can request actions for resource",
      "duration": 2226,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns comments in activity feed",
      "fullTitle": "Activity Feed API Returns comments in activity feed",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns click events in activity feed",
      "fullTitle": "Activity Feed API Returns click events in activity feed",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns feedback events in activity feed",
      "fullTitle": "Activity Feed API Returns feedback events in activity feed",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns signup events in activity feed",
      "fullTitle": "Activity Feed API Returns signup events in activity feed",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns email sent events in activity feed",
      "fullTitle": "Activity Feed API Returns email sent events in activity feed",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns email delivered events in activity feed",
      "fullTitle": "Activity Feed API Returns email delivered events in activity feed",
      "duration": 26,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns email opened events in activity feed",
      "fullTitle": "Activity Feed API Returns email opened events in activity feed",
      "duration": 38,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter events by post id",
      "fullTitle": "Activity Feed API Can filter events by post id",
      "duration": 50,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can limit events",
      "fullTitle": "Activity Feed API Can limit events",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use NQL OR for type only",
      "fullTitle": "Activity Feed API Filter splitting Can use NQL OR for type only",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot combine type filter with OR filter",
      "fullTitle": "Activity Feed API Filter splitting Cannot combine type filter with OR filter",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can only combine type and other filters at the root level",
      "fullTitle": "Activity Feed API Filter splitting Can only combine type and other filters at the root level",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use OR as long as it is not combined with type",
      "fullTitle": "Activity Feed API Filter splitting Can use OR as long as it is not combined with type",
      "duration": 42,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can AND two ORs",
      "fullTitle": "Activity Feed API Filter splitting Can AND two ORs",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can do filter based pagination for all posts",
      "fullTitle": "Activity Feed API Filter-based pagination Can do filter based pagination for all posts",
      "duration": 53,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can do filter based pagination for one post",
      "fullTitle": "Activity Feed API Filter-based pagination Can do filter based pagination for one post",
      "duration": 73,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can do filter based pagination for aggregated clicks for one post",
      "fullTitle": "Activity Feed API Filter-based pagination Can do filter based pagination for aggregated clicks for one post",
      "duration": 68,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can do filter based pagination for aggregated clicks for all posts",
      "fullTitle": "Activity Feed API Filter-based pagination Can do filter based pagination for aggregated clicks for all posts",
      "duration": 81,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can retrieve config and all expected properties",
      "fullTitle": "Config API can retrieve config and all expected properties",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a boolean when it is configured",
      "fullTitle": "Config API mailgunIsConfigured is a boolean when it is configured",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a boolean when it is not configured",
      "fullTitle": "Config API mailgunIsConfigured is a boolean when it is not configured",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can fetch settings for current theme",
      "fullTitle": "Custom Theme Settings API Browse can fetch settings for current theme",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update all settings for current theme",
      "fullTitle": "Custom Theme Settings API Edit can update all settings for current theme",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update some settings",
      "fullTitle": "Custom Theme Settings API Edit can update some settings",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors for unknown key",
      "fullTitle": "Custom Theme Settings API Edit errors for unknown key",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors for invalid select value",
      "fullTitle": "Custom Theme Settings API Edit errors for invalid select value",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export a JSON database",
      "fullTitle": "DB API Can export a JSON database",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete all content",
      "fullTitle": "DB API Can delete all content",
      "duration": 81,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can trigger external media inliner",
      "fullTitle": "DB API Can trigger external media inliner",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can't retrieve for non existent post",
      "fullTitle": "Email Preview API Read can't retrieve for non existent post",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read post email preview with fields",
      "fullTitle": "Email Preview API Read can read post email preview with fields",
      "duration": 119,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read post email preview with email card and replacements",
      "fullTitle": "Email Preview API Read can read post email preview with email card and replacements",
      "duration": 74,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has custom content transformations for email compatibility",
      "fullTitle": "Email Preview API Read has custom content transformations for email compatibility",
      "duration": 68,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uses the posts newsletter by default",
      "fullTitle": "Email Preview API Read uses the posts newsletter by default",
      "duration": 92,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "uses the newsletter provided through ?newsletter=slug",
      "fullTitle": "Email Preview API Read uses the newsletter provided through ?newsletter=slug",
      "duration": 125,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can send test email",
      "fullTitle": "Email Preview API As Owner can send test email",
      "duration": 57,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can send test email",
      "fullTitle": "Email Preview API As Admin can send test email",
      "duration": 66,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can send test email",
      "fullTitle": "Email Preview API As Editor can send test email",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot send test email",
      "fullTitle": "Email Preview API As Author cannot send test email",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot send test email",
      "fullTitle": "Email Preview API As Contributor cannot send test email",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse emails",
      "fullTitle": "Emails API Can browse emails",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read an email",
      "fullTitle": "Emails API Can read an email",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retry a failed email",
      "fullTitle": "Emails API Can retry a failed email",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse email batches",
      "fullTitle": "Emails API Can browse email batches",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse email batches with recipient count",
      "fullTitle": "Emails API Can browse email batches with recipient count",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all email failures",
      "fullTitle": "Emails API Can browse all email failures",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse permanent email failures",
      "fullTitle": "Emails API Can browse permanent email failures",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse temporary email failures",
      "fullTitle": "Emails API Can browse temporary email failures",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse email failures with includes",
      "fullTitle": "Emails API Can browse email failures with includes",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does default replacements on the HTML body of an old email",
      "fullTitle": "Emails API Does default replacements on the HTML body of an old email",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request Explore data",
      "fullTitle": "Explore API Read Can request Explore data",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a file",
      "fullTitle": "Files API Can upload a file",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a png",
      "fullTitle": "Images API Can upload a png",
      "duration": 48,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a jpg",
      "fullTitle": "Images API Can upload a jpg",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a gif",
      "fullTitle": "Images API Can upload a gif",
      "duration": 37,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a webp",
      "fullTitle": "Images API Can upload a webp",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a svg",
      "fullTitle": "Images API Can upload a svg",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a square profile image",
      "fullTitle": "Images API Can upload a square profile image",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not upload a json file",
      "fullTitle": "Images API Can not upload a json file",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not upload a file without extension",
      "fullTitle": "Images API Can not upload a file without extension",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not upload a json file with image mime type",
      "fullTitle": "Images API Can not upload a json file with image mime type",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not upload a json file with image file extension",
      "fullTitle": "Images API Can not upload a json file with image file extension",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload multiple images with the same name",
      "fullTitle": "Images API Can upload multiple images with the same name",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload image with number suffix",
      "fullTitle": "Images API Can upload image with number suffix",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Trims _o suffix from uploaded files",
      "fullTitle": "Images API Trims _o suffix from uploaded files",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use _o in uploaded file name, as long as it is not at the end",
      "fullTitle": "Images API Can use _o in uploaded file name, as long as it is not at the end",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload around midnight of month change",
      "fullTitle": "Images API Can upload around midnight of month change",
      "duration": 70,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all integrations",
      "fullTitle": "Integrations API Can browse all integrations",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not read internal integration",
      "fullTitle": "Integrations API Can not read internal integration",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully create a single integration with auto generated content and admin api key",
      "fullTitle": "Integrations API Can successfully create a single integration with auto generated content and admin api key",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully create a single integration with a webhook",
      "fullTitle": "Integrations API Can successfully create a single integration with a webhook",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully get a created integration",
      "fullTitle": "Integrations API Can successfully get a created integration",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully get *all* created integrations with api_keys",
      "fullTitle": "Integrations API Can successfully get *all* created integrations with api_keys",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully edit a created integration",
      "fullTitle": "Integrations API Can successfully edit a created integration",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully refresh an integration api key",
      "fullTitle": "Integrations API Can successfully refresh an integration api key",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully add and delete a created integrations webhooks",
      "fullTitle": "Integrations API Can successfully add and delete a created integrations webhooks",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can successfully delete a created integration",
      "fullTitle": "Integrations API Can successfully delete a created integration",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't see Self-Serve or any other integration",
      "fullTitle": "Integrations API As Administrator Can't see Self-Serve or any other integration",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch all invites",
      "fullTitle": "Invites API Can fetch all invites",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read an invitation by id",
      "fullTitle": "Invites API Can read an invitation by id",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a new invite",
      "fullTitle": "Invites API Can add a new invite",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy an existing invite",
      "fullTitle": "Invites API Can destroy an existing invite",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot destroy an non-existent invite",
      "fullTitle": "Invites API Cannot destroy an non-existent invite",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not access endpoint without a token header",
      "fullTitle": "Admin API key authentication Can not access endpoint without a token header",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not access endpoint with a wrong endpoint token",
      "fullTitle": "Admin API key authentication Can not access endpoint with a wrong endpoint token",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can access browse endpoint with correct token",
      "fullTitle": "Admin API key authentication Can access browse endpoint with correct token",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create post",
      "fullTitle": "Admin API key authentication Can create post",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read users",
      "fullTitle": "Admin API key authentication Can read users",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Blocks the request when host limit is in place for custom integrations",
      "fullTitle": "Admin API key authentication Host Settings: custom integration limits Blocks the request when host limit is in place for custom integrations",
      "duration": 98,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with no labels",
      "fullTitle": "Labels API Can browse with no labels",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add",
      "fullTitle": "Labels API Can add",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when adding label with the same name",
      "fullTitle": "Labels API Errors when adding label with the same name",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with member count",
      "fullTitle": "Labels API Can browse with member count",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read by slug and edit",
      "fullTitle": "Labels API Can read by slug and edit",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy",
      "fullTitle": "Labels API Can destroy",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot destroy non-existent label",
      "fullTitle": "Labels API Cannot destroy non-existent label",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all links",
      "fullTitle": "Links API Can browse all links",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk update multiple links with same site redirect",
      "fullTitle": "Links API Can bulk update multiple links with same site redirect",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk update links with external redirect",
      "fullTitle": "Links API Can bulk update links with external redirect",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can call bulk update link with 0 matches",
      "fullTitle": "Links API Can call bulk update link with 0 matches",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a MP4",
      "fullTitle": "Media API media/upload Can upload a MP4",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a WebM without a thumbnail",
      "fullTitle": "Media API media/upload Can upload a WebM without a thumbnail",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload an Ogg",
      "fullTitle": "Media API media/upload Can upload an Ogg",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload an mp3",
      "fullTitle": "Media API media/upload Can upload an mp3",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload an m4a with audio/mp4 content type",
      "fullTitle": "Media API media/upload Can upload an m4a with audio/mp4 content type",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload an m4a with audio/x-m4a content type",
      "fullTitle": "Media API media/upload Can upload an m4a with audio/x-m4a content type",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Rejects non-media file type",
      "fullTitle": "Media API media/upload Rejects non-media file type",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update existing thumbnail",
      "fullTitle": "Media API media/thumbnail/upload Can update existing thumbnail",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create new thumbnail based on parent media URL without existing thumbnail",
      "fullTitle": "Media API media/thumbnail/upload Can create new thumbnail based on parent media URL without existing thumbnail",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export tiers",
      "fullTitle": "Members API — exportCSV Can export tiers",
      "duration": 62,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export a member without tiers",
      "fullTitle": "Members API — exportCSV Can export a member without tiers",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export labels",
      "fullTitle": "Members API — exportCSV Can export labels",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export comped",
      "fullTitle": "Members API — exportCSV Can export comped",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export newsletters",
      "fullTitle": "Members API — exportCSV Can export newsletters",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export customer id",
      "fullTitle": "Members API — exportCSV Can export customer id",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can import CSV",
      "fullTitle": "Members Importer API Can import CSV",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members with filter",
      "fullTitle": "Members Importer API Can bulk unsubscribe members with filter",
      "duration": 105,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk add and remove labels to members with filter",
      "fullTitle": "Members Importer API Can bulk add and remove labels to members with filter",
      "duration": 106,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch members who are subscribed",
      "fullTitle": "Members API - With Newsletters Can fetch members who are subscribed",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch members who are NOT subscribed",
      "fullTitle": "Members API - With Newsletters Can fetch members who are NOT subscribed",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch members who are subscribed",
      "fullTitle": "Members API - With Newsletters - compat mode Can fetch members who are subscribed",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch members who are NOT subscribed",
      "fullTitle": "Members API - With Newsletters - compat mode Can fetch members who are NOT subscribed",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can do auth",
      "fullTitle": "Members Stripe Connect API can do auth",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Add should fail when comped flag is passed in but Stripe is not enabled",
      "fullTitle": "Members API without Stripe Add should fail when comped flag is passed in but Stripe is not enabled",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to a post",
      "fullTitle": "Members API - member attribution Can read member attributed to a post",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to a page",
      "fullTitle": "Members API - member attribution Can read member attributed to a page",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to a tag",
      "fullTitle": "Members API - member attribution Can read member attributed to a tag",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to an author",
      "fullTitle": "Members API - member attribution Can read member attributed to an author",
      "duration": 26,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read member attributed to an url",
      "fullTitle": "Members API - member attribution Can read member attributed to an url",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns sign up attributions of all types in activity feed",
      "fullTitle": "Members API - member attribution Returns sign up attributions of all types in activity feed",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse",
      "fullTitle": "Members API Can browse",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with filter",
      "fullTitle": "Members API Can browse with filter",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by signup attribution",
      "fullTitle": "Members API Can filter by signup attribution",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by signup attribution",
      "fullTitle": "Members API Can filter by signup attribution",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with search",
      "fullTitle": "Members API Can browse with search",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by paid status",
      "fullTitle": "Members API Can filter by paid status",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by tier id",
      "fullTitle": "Members API Can filter by tier id",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter using contains operators",
      "fullTitle": "Members API Can filter using contains operators",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can ignore any unknown includes",
      "fullTitle": "Members API Can ignore any unknown includes",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can order by email_open_rate",
      "fullTitle": "Members API Can order by email_open_rate",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Search by case-insensitive name egg receives member with name Mr Egg",
      "fullTitle": "Members API Search by case-insensitive name egg receives member with name Mr Egg",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Search by case-insensitive email MEMBER2 receives member with email member2@test.com",
      "fullTitle": "Members API Search by case-insensitive email MEMBER2 receives member with email member2@test.com",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Search for paid members retrieves member with email paid@test.com",
      "fullTitle": "Members API Search for paid members retrieves member with email paid@test.com",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Search for non existing member returns empty result set",
      "fullTitle": "Members API Search for non existing member returns empty result set",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read",
      "fullTitle": "Members API Can read",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read and include email_recipients",
      "fullTitle": "Members API Can read and include email_recipients",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read and include tiers",
      "fullTitle": "Members API Can read and include tiers",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add",
      "fullTitle": "Members API Can add",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a member and trigger host email verification limits",
      "fullTitle": "Members API Can add a member and trigger host email verification limits",
      "duration": 158,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add and send a signup confirmation email",
      "fullTitle": "Members API Can add and send a signup confirmation email",
      "duration": 60,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Add should fail when passing incorrect email_type query parameter",
      "fullTitle": "Members API Add should fail when passing incorrect email_type query parameter",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add complimentary subscription (out of date)",
      "fullTitle": "Members API Can add complimentary subscription (out of date)",
      "duration": 66,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add complimentary subscription by assigning a product to a member",
      "fullTitle": "Members API Can add complimentary subscription by assigning a product to a member",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can end a complimentary subscription by removing a product from a member",
      "fullTitle": "Members API Can end a complimentary subscription by removing a product from a member",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a new member with a product (complimentary)",
      "fullTitle": "Members API Can create a new member with a product (complimentary)",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a member with an existing complimentary subscription",
      "fullTitle": "Members API Can create a member with an existing complimentary subscription",
      "duration": 59,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a member with an existing paid subscription",
      "fullTitle": "Members API Can create a member with an existing paid subscription",
      "duration": 54,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns an identical member format for read, edit and browse",
      "fullTitle": "Members API Returns an identical member format for read, edit and browse",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot add complimentary subscriptions to a member with an active subscription",
      "fullTitle": "Members API Cannot add complimentary subscriptions to a member with an active subscription",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot remove non complimentary subscriptions directly from a member",
      "fullTitle": "Members API Cannot remove non complimentary subscriptions directly from a member",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can remove a complimentary subscription directly from a member with other active subscriptions",
      "fullTitle": "Members API Can remove a complimentary subscription directly from a member with other active subscriptions",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can keep tiers unchanged when modifying a paid member",
      "fullTitle": "Members API Can keep tiers unchanged when modifying a paid member",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit by id",
      "fullTitle": "Members API Can edit by id",
      "duration": 40,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot edit a non-existing id with newsletters",
      "fullTitle": "Members API Cannot edit a non-existing id with newsletters",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot edit a non-existing id",
      "fullTitle": "Members API Cannot edit a non-existing id",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can subscribe to a newsletter",
      "fullTitle": "Members API Can subscribe to a newsletter",
      "duration": 59,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Subscribes to default newsletters",
      "fullTitle": "Members API Subscribes to default newsletters",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a subscription",
      "fullTitle": "Members API Can add a subscription",
      "duration": 79,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a subscription",
      "fullTitle": "Members API Can edit a subscription",
      "duration": 99,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy",
      "fullTitle": "Members API Can destroy",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot delete a non-existent member",
      "fullTitle": "Members API Cannot delete a non-existent member",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export CSV",
      "fullTitle": "Members API Can export CSV",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export a filtered CSV",
      "fullTitle": "Members API Can export a filtered CSV",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a member without cancelling Stripe Subscription",
      "fullTitle": "Members API Can delete a member without cancelling Stripe Subscription",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a member while cancelling Stripe Subscription",
      "fullTitle": "Members API Can delete a member while cancelling Stripe Subscription",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch member counts stats",
      "fullTitle": "Members API Can fetch member counts stats",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when fetching stats with unknown days param value",
      "fullTitle": "Members API Errors when fetching stats with unknown days param value",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter on newsletter slug",
      "fullTitle": "Members API Can filter on newsletter slug",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter on tier slug",
      "fullTitle": "Members API Can filter on tier slug",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add and edit with custom newsletters",
      "fullTitle": "Members API Can add and edit with custom newsletters",
      "duration": 44,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Setting subscribed when editing a member won't reset to default newsletters",
      "fullTitle": "Members API Setting subscribed when editing a member won't reset to default newsletters",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding newsletters to member with no subscriptions works even with subscribed false",
      "fullTitle": "Members API Adding newsletters to member with no subscriptions works even with subscribed false",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Updating member data without newsletters does not change newsletters",
      "fullTitle": "Members API Updating member data without newsletters does not change newsletters",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Updating newsletter subscriptions does not unsubscribe member from archived newsletter",
      "fullTitle": "Members API Updating newsletter subscriptions does not unsubscribe member from archived newsletter",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add and send a signup confirmation email (old)",
      "fullTitle": "Members API Can add and send a signup confirmation email (old)",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a member that is not subscribed (old)",
      "fullTitle": "Members API Can add a member that is not subscribed (old)",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can unsubscribe by setting (old) subscribed property to false",
      "fullTitle": "Members API Can unsubscribe by setting (old) subscribed property to false",
      "duration": 37,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can subscribe by setting (old) subscribed property to true",
      "fullTitle": "Members API Can subscribe by setting (old) subscribed property to true",
      "duration": 37,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members with filter",
      "fullTitle": "Members API Bulk operations Can bulk unsubscribe members with filter",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members from specific newsletter",
      "fullTitle": "Members API Bulk operations Can bulk unsubscribe members from specific newsletter",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members with deprecated subscribed filter",
      "fullTitle": "Members API Bulk operations Can bulk unsubscribe members with deprecated subscribed filter",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk unsubscribe members with deprecated subscribed filter (actual)",
      "fullTitle": "Members API Bulk operations Can bulk unsubscribe members with deprecated subscribed filter (actual)",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk delete a label from members",
      "fullTitle": "Members API Bulk operations Can bulk delete a label from members",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Doesn't delete labels apart from the passed label id",
      "fullTitle": "Members API Bulk operations Doesn't delete labels apart from the passed label id",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk delete a label from members with filters",
      "fullTitle": "Members API Bulk operations Can bulk delete a label from members with filters",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can bulk delete members",
      "fullTitle": "Members API Bulk operations Can bulk delete members",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with limits",
      "fullTitle": "Mentions API Can browse with limits",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot browse when lab disabled",
      "fullTitle": "Mentions API Cannot browse when lab disabled",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse newsletters",
      "fullTitle": "Newsletters API Can browse newsletters",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read a newsletter",
      "fullTitle": "Newsletters API Can read a newsletter",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include members & posts counts when browsing newsletters",
      "fullTitle": "Newsletters API Can include members & posts counts when browsing newsletters",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include members & posts counts when reading a newsletter",
      "fullTitle": "Newsletters API Can include members & posts counts when reading a newsletter",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a newsletter",
      "fullTitle": "Newsletters API Can add a newsletter",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include members & posts counts when adding a newsletter",
      "fullTitle": "Newsletters API Can include members & posts counts when adding a newsletter",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add multiple newsletters",
      "fullTitle": "Newsletters API Can add multiple newsletters",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a newsletter - with custom sender_email",
      "fullTitle": "Newsletters API Can add a newsletter - with custom sender_email",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a newsletter - and subscribe existing members",
      "fullTitle": "Newsletters API Can add a newsletter - and subscribe existing members",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit newsletters",
      "fullTitle": "Newsletters API Can edit newsletters",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include members & posts counts when editing newsletters",
      "fullTitle": "Newsletters API Can include members & posts counts when editing newsletters",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a newsletters and update the sender_email when already set",
      "fullTitle": "Newsletters API Can edit a newsletters and update the sender_email when already set",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can verify property updates",
      "fullTitle": "Newsletters API Can verify property updates",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't add multiple newsletters with same name",
      "fullTitle": "Newsletters API Can't add multiple newsletters with same name",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a newsletter - with custom sender_email and subscribe existing members",
      "fullTitle": "Newsletters API Can add a newsletter - with custom sender_email and subscribe existing members",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't edit multiple newsletters to existing name",
      "fullTitle": "Newsletters API Can't edit multiple newsletters to existing name",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Request fails when newsletter limit is in place",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Request fails when newsletter limit is in place",
      "duration": 407,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding newsletter fails",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Adding newsletter fails",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding newsletter fails without transaction",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Adding newsletter fails without transaction",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding an archived newsletter doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Adding an archived newsletter doesn't fail",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Editing an active newsletter doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Editing an active newsletter doesn't fail",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Editing an archived newsletter doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Editing an archived newsletter doesn't fail",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Unarchiving a newsletter fails",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Unarchiving a newsletter fails",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Archiving a newsletter doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Archiving a newsletter doesn't fail",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adding a newsletter now doesn't fail",
      "fullTitle": "Newsletters API Host Settings: newsletter limits Max limit Adding a newsletter now doesn't fail",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add notification",
      "fullTitle": "Notifications API Can add notification",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete notification",
      "fullTitle": "Notifications API Can delete notification",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can fetch an embed",
      "fullTitle": "Oembed API can fetch an embed",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can fetch a bookmark with ?type=bookmark",
      "fullTitle": "Oembed API type: bookmark can fetch a bookmark with ?type=bookmark",
      "duration": 367,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "falls back to bookmark without ?type=embed and no oembed metatag",
      "fullTitle": "Oembed API type: bookmark falls back to bookmark without ?type=embed and no oembed metatag",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors with useful message when title is unavailable",
      "fullTitle": "Oembed API type: bookmark errors with useful message when title is unavailable",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors when fetched url is an IP address",
      "fullTitle": "Oembed API type: bookmark errors when fetched url is an IP address",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors when fetched url is incorrect",
      "fullTitle": "Oembed API type: bookmark errors when fetched url is incorrect",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "fetches url and follows redirects",
      "fullTitle": "Oembed API with unknown provider fetches url and follows redirects",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "fetches url and follows <link rel=\"alternate\">",
      "fullTitle": "Oembed API with unknown provider fetches url and follows <link rel=\"alternate\">",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "follows redirects when fetching <link rel=\"alternate\">",
      "fullTitle": "Oembed API with unknown provider follows redirects when fetching <link rel=\"alternate\">",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rejects invalid oembed responses",
      "fullTitle": "Oembed API with unknown provider rejects invalid oembed responses",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rejects unknown oembed types",
      "fullTitle": "Oembed API with unknown provider rejects unknown oembed types",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rejects invalid photo responses",
      "fullTitle": "Oembed API with unknown provider rejects invalid photo responses",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "rejects invalid video responses",
      "fullTitle": "Oembed API with unknown provider rejects invalid video responses",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "strips unknown response fields",
      "fullTitle": "Oembed API with unknown provider strips unknown response fields",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching IPv4 addresses",
      "fullTitle": "Oembed API with unknown provider skips fetching IPv4 addresses",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching IPv6 addresses",
      "fullTitle": "Oembed API with unknown provider skips fetching IPv6 addresses",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching localhost",
      "fullTitle": "Oembed API with unknown provider skips fetching localhost",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching url that resolves to private IP",
      "fullTitle": "Oembed API with unknown provider skips fetching url that resolves to private IP",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "aborts fetching if a redirect resolves to private IP",
      "fullTitle": "Oembed API with unknown provider aborts fetching if a redirect resolves to private IP",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "skips fetching <link rel=\"alternate\"> if it resolves to a private IP",
      "fullTitle": "Oembed API with unknown provider skips fetching <link rel=\"alternate\"> if it resolves to a private IP",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "falls back to bookmark card for WP oembeds",
      "fullTitle": "Oembed API with unknown provider falls back to bookmark card for WP oembeds",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "decodes non utf-8 charsets",
      "fullTitle": "Oembed API with unknown provider decodes non utf-8 charsets",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not fail on unknown charset",
      "fullTitle": "Oembed API with unknown provider does not fail on unknown charset",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Has no initial offers",
      "fullTitle": "Offers API Has no initial offers",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a new offer",
      "fullTitle": "Offers API Can add a new offer",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a new offer with minimal fields",
      "fullTitle": "Offers API Can add a new offer with minimal fields",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Slugifies offer codes",
      "fullTitle": "Offers API Slugifies offer codes",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a fixed offer",
      "fullTitle": "Offers API Can add a fixed offer",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a trial offer",
      "fullTitle": "Offers API Can add a trial offer",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot create offer with same code",
      "fullTitle": "Offers API Cannot create offer with same code",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot create offer with same slugified code",
      "fullTitle": "Offers API Cannot create offer with same slugified code",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot create offer with same name",
      "fullTitle": "Offers API Cannot create offer with same name",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse",
      "fullTitle": "Offers API Can browse",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can get a single offer",
      "fullTitle": "Offers API Can get a single offer",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can get a trial offer",
      "fullTitle": "Offers API Can get a trial offer",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit an offer",
      "fullTitle": "Offers API Can edit an offer",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer code to one that exists",
      "fullTitle": "Offers API Cannot update offer code to one that exists",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer code to one that exists after it is slugified",
      "fullTitle": "Offers API Cannot update offer code to one that exists after it is slugified",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer name to one that exists",
      "fullTitle": "Offers API Cannot update offer name to one that exists",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can archive an offer",
      "fullTitle": "Offers API Can archive an offer",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse archived",
      "fullTitle": "Offers API Can browse archived",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse active",
      "fullTitle": "Offers API Can browse active",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer cadence",
      "fullTitle": "Offers API Cannot update offer cadence",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer amount",
      "fullTitle": "Offers API Cannot update offer amount",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update offer tier",
      "fullTitle": "Offers API Cannot update offer tier",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve all pages",
      "fullTitle": "Pages API Can retrieve all pages",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve pages with lexical format",
      "fullTitle": "Pages API Can retrieve pages with lexical format",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a page",
      "fullTitle": "Pages API Can add a page",
      "duration": 47,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a page with mobiledoc",
      "fullTitle": "Pages API Can add a page with mobiledoc",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a page with lexical",
      "fullTitle": "Pages API Can add a page with lexical",
      "duration": 83,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't add a page with both mobiledoc and lexical",
      "fullTitle": "Pages API Can't add a page with both mobiledoc and lexical",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for public page",
      "fullTitle": "Pages API Can include free and paid tiers for public page",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for members only page",
      "fullTitle": "Pages API Can include free and paid tiers for members only page",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include only paid tier for paid page",
      "fullTitle": "Pages API Can include only paid tier for paid page",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include specific tier for page with tiers visibility",
      "fullTitle": "Pages API Can include specific tier for page with tiers visibility",
      "duration": 53,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update a page",
      "fullTitle": "Pages API Can update a page",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update a page with restricted access to specific tier",
      "fullTitle": "Pages API Can update a page with restricted access to specific tier",
      "duration": 46,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot get page via posts endpoint",
      "fullTitle": "Pages API Cannot get page via posts endpoint",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update page via posts endpoint",
      "fullTitle": "Pages API Cannot update page via posts endpoint",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a page",
      "fullTitle": "Pages API Can delete a page",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve all posts",
      "fullTitle": "Posts API Can retrieve all posts",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve multiple post formats",
      "fullTitle": "Posts API Can retrieve multiple post formats",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include single relation",
      "fullTitle": "Posts API Can include single relation",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter posts",
      "fullTitle": "Posts API Can filter posts",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns a validation error when unknown filter key is used",
      "fullTitle": "Posts API Returns a validation error when unknown filter key is used",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can paginate posts",
      "fullTitle": "Posts API Can paginate posts",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request a post by id",
      "fullTitle": "Posts API Can request a post by id",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request a post by id without newsletter",
      "fullTitle": "Posts API Can request a post by id without newsletter",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve a post by slug",
      "fullTitle": "Posts API Can retrieve a post by slug",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include relations for a single post",
      "fullTitle": "Posts API Can include relations for a single post",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a post",
      "fullTitle": "Posts API Can add a post",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for public post",
      "fullTitle": "Posts API Can include free and paid tiers for public post",
      "duration": 55,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for members only post",
      "fullTitle": "Posts API Can include free and paid tiers for members only post",
      "duration": 58,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include only paid tier for paid post",
      "fullTitle": "Posts API Can include only paid tier for paid post",
      "duration": 60,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include specific tier for post with tiers visibility",
      "fullTitle": "Posts API Can include specific tier for post with tiers visibility",
      "duration": 70,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update draft",
      "fullTitle": "Posts API Can update draft",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update and force re-render",
      "fullTitle": "Posts API Can update and force re-render",
      "duration": 40,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can unpublish a post",
      "fullTitle": "Posts API Can unpublish a post",
      "duration": 80,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't change the newsletter of a post from the post body",
      "fullTitle": "Posts API Can't change the newsletter of a post from the post body",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't change the newsletter of a post from the post body",
      "fullTitle": "Posts API Can't change the newsletter of a post from the post body",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot change the newsletter via body when adding",
      "fullTitle": "Posts API Cannot change the newsletter via body when adding",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot send to an archived newsletter",
      "fullTitle": "Posts API Cannot send to an archived newsletter",
      "duration": 44,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a post without email",
      "fullTitle": "Posts API Can publish a post without email",
      "duration": 105,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Interprets sent status as published for not email only posts",
      "fullTitle": "Posts API Interprets sent status as published for not email only posts",
      "duration": 107,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a post and send as email",
      "fullTitle": "Posts API Can publish a post and send as email",
      "duration": 121,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Interprets sent as published for a post with email",
      "fullTitle": "Posts API Interprets sent as published for a post with email",
      "duration": 123,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish an email_only post by setting status to published",
      "fullTitle": "Posts API Can publish an email_only post by setting status to published",
      "duration": 64,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish an email_only post with free filter",
      "fullTitle": "Posts API Can publish an email_only post with free filter",
      "duration": 72,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish an email_only post by setting the status to sent",
      "fullTitle": "Posts API Can publish an email_only post by setting the status to sent",
      "duration": 65,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a scheduled post",
      "fullTitle": "Posts API Can publish a scheduled post",
      "duration": 146,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a scheduled post with custom email segment",
      "fullTitle": "Posts API Can publish a scheduled post with custom email segment",
      "duration": 153,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a scheduled post without newsletter",
      "fullTitle": "Posts API Can publish a scheduled post without newsletter",
      "duration": 145,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a scheduled email only post",
      "fullTitle": "Posts API Can publish a scheduled email only post",
      "duration": 83,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't change the newsletter once it has been sent",
      "fullTitle": "Posts API Can't change the newsletter once it has been sent",
      "duration": 292,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot get post via pages endpoint",
      "fullTitle": "Posts API Cannot get post via pages endpoint",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot update post via pages endpoint",
      "fullTitle": "Posts API Cannot update post via pages endpoint",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish a post and send as email",
      "fullTitle": "Posts API As Author Can publish a post and send as email",
      "duration": 136,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can publish an email_only post",
      "fullTitle": "Posts API As Author Can publish an email_only post",
      "duration": 64,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Request fails when emails limit is in place",
      "fullTitle": "Posts API Host Settings: emails limits Request fails when emails limit is in place",
      "duration": 840,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse",
      "fullTitle": "Posts API Can browse",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse with formats",
      "fullTitle": "Posts API Can browse with formats",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export",
      "fullTitle": "Posts API Export Can export",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export with order",
      "fullTitle": "Posts API Export Can export with order",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export with limit",
      "fullTitle": "Posts API Export Can export with limit",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can export with filter",
      "fullTitle": "Posts API Export Can export with filter",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a post with mobiledoc",
      "fullTitle": "Posts API Create Can create a post with mobiledoc",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a post with lexical",
      "fullTitle": "Posts API Create Can create a post with lexical",
      "duration": 42,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors if both mobiledoc and lexical are present",
      "fullTitle": "Posts API Create Errors if both mobiledoc and lexical are present",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors with an invalid lexical state object",
      "fullTitle": "Posts API Create Errors with an invalid lexical state object",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update a post with mobiledoc",
      "fullTitle": "Posts API Update Can update a post with mobiledoc",
      "duration": 59,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can update a post with lexical",
      "fullTitle": "Posts API Update Can update a post with lexical",
      "duration": 67,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy a post",
      "fullTitle": "Posts API Delete Can destroy a post",
      "duration": 48,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot delete a non-existent posts",
      "fullTitle": "Posts API Delete Cannot delete a non-existent posts",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Is rate limited to protect against brute forcing a users password",
      "fullTitle": "Sessions API Is rate limited to protect against brute forcing a users password",
      "duration": 73,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Is rate limited to protect against brute forcing whether a user exists",
      "fullTitle": "Sessions API Is rate limited to protect against brute forcing whether a user exists",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "download",
      "fullTitle": "Redirects API download",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "upload",
      "fullTitle": "Redirects API upload",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all roles",
      "fullTitle": "Roles API Can request all roles",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request roles which i am able to assign to other users",
      "fullTitle": "Roles API Can request roles which i am able to assign to other users",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can create session (log in)",
      "fullTitle": "Sessions API can create session (log in)",
      "duration": 64,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read session now the owner is logged in",
      "fullTitle": "Sessions API can read session now the owner is logged in",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can delete session (log out)",
      "fullTitle": "Sessions API can delete session (log out)",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "errors when reading session again now owner is not logged in",
      "fullTitle": "Sessions API errors when reading session again now owner is not logged in",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can download routes.yaml",
      "fullTitle": "Settings File API Can download routes.yaml",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload routes.yaml",
      "fullTitle": "Settings File API Can upload routes.yaml",
      "duration": 1022,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all settings",
      "fullTitle": "Settings API Browse Can request all settings",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request settings by group",
      "fullTitle": "Settings API Browse Can request settings by group",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Requesting core settings by group ignores the parameter and returns no settings",
      "fullTitle": "Settings API Browse Requesting core settings by group ignores the parameter and returns no settings",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a setting",
      "fullTitle": "Settings API Edit Can edit a setting",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "removes image size prefixes when setting the icon",
      "fullTitle": "Settings API Edit removes image size prefixes when setting the icon",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot edit uneditable settings",
      "fullTitle": "Settings API Edit cannot edit uneditable settings",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "editing members_support_address triggers email verification flow",
      "fullTitle": "Settings API Edit editing members_support_address triggers email verification flow",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not trigger email verification flow if members_support_address remains the same",
      "fullTitle": "Settings API Edit does not trigger email verification flow if members_support_address remains the same",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update members_support_address via token",
      "fullTitle": "Settings API verify key update can update members_support_address via token",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot update invalid keys via token",
      "fullTitle": "Settings API verify key update cannot update invalid keys via token",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can do disconnectStripeConnectIntegration",
      "fullTitle": "Settings API stripe connect can do disconnectStripeConnectIntegration",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can attempt to connect to stripe",
      "fullTitle": "Settings API stripe connect Can attempt to connect to stripe",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can retrieve config and all expected properties",
      "fullTitle": "Site API can retrieve config and all expected properties",
      "duration": 51,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can generate a slug",
      "fullTitle": "Slug API Can generate a slug",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add",
      "fullTitle": "Snippets API Can add",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse",
      "fullTitle": "Snippets API Can browse",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read",
      "fullTitle": "Snippets API Can read",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit",
      "fullTitle": "Snippets API Can edit",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy",
      "fullTitle": "Snippets API Can destroy",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot destroy non-existent snippet",
      "fullTitle": "Snippets API Cannot destroy non-existent snippet",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch member count history",
      "fullTitle": "Stats API Can fetch member count history",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch MRR history",
      "fullTitle": "Stats API Can fetch MRR history",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch subscriptions history",
      "fullTitle": "Stats API Subscriptions history Can fetch subscriptions history",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch history for free trials",
      "fullTitle": "Stats API Subscriptions history Can fetch history for free trials",
      "duration": 85,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch history for 3D secure payments",
      "fullTitle": "Stats API Subscriptions history Can fetch history for 3D secure payments",
      "duration": 89,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch attribution stats",
      "fullTitle": "Stats API Post attribution stats Can fetch attribution stats",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch attribution stats",
      "fullTitle": "Stats API Referrer source history stats Can fetch attribution stats",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all tags",
      "fullTitle": "Tag API Can request all tags",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can paginate tags",
      "fullTitle": "Tag API Can paginate tags",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read a tag",
      "fullTitle": "Tag API Can read a tag",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add a tag",
      "fullTitle": "Tag API Can add a tag",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add an internal tag",
      "fullTitle": "Tag API Can add an internal tag",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a tag",
      "fullTitle": "Tag API Can edit a tag",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy a tag",
      "fullTitle": "Tag API Can destroy a tag",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy a non-existent tag",
      "fullTitle": "Tag API Can destroy a non-existent tag",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all available themes",
      "fullTitle": "Themes API Can request all available themes",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can download a theme",
      "fullTitle": "Themes API Can download a theme",
      "duration": 81,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch active theme",
      "fullTitle": "Themes API Can fetch active theme",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a valid theme",
      "fullTitle": "Themes API Can upload a valid theme",
      "duration": 99,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a theme",
      "fullTitle": "Themes API Can delete a theme",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can upload a theme, which has warnings",
      "fullTitle": "Themes API Can upload a theme, which has warnings",
      "duration": 93,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can activate a theme",
      "fullTitle": "Themes API Can activate a theme",
      "duration": 87,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can download and install a theme from GitHub",
      "fullTitle": "Themes API Can download and install a theme from GitHub",
      "duration": 92,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can re-upload the active theme to override",
      "fullTitle": "Themes API Can re-upload the active theme to override",
      "duration": 131,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse Tiers",
      "fullTitle": "Tiers API Can browse Tiers",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when price is non-integer",
      "fullTitle": "Tiers API Errors when price is non-integer",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when price is negative",
      "fullTitle": "Tiers API Errors when price is negative",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when price is too large",
      "fullTitle": "Tiers API Errors when price is too large",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read Tiers",
      "fullTitle": "Tiers API Can read Tiers",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit visibility",
      "fullTitle": "Tiers API Can edit visibility",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can save with trial_days as null",
      "fullTitle": "Tiers API Can save with trial_days as null",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit tier properties and relations",
      "fullTitle": "Tiers API Can edit tier properties and relations",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a new tier",
      "fullTitle": "Tiers API Can create a new tier",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request all users ordered by id",
      "fullTitle": "User API Can request all users ordered by id",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include user roles",
      "fullTitle": "User API Can include user roles",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can paginate users",
      "fullTitle": "User API Can paginate users",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve a user by id",
      "fullTitle": "User API Can retrieve a user by id",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve a user by slug",
      "fullTitle": "User API Can retrieve a user by slug",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can retrieve a user by email",
      "fullTitle": "User API Can retrieve a user by email",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can edit a user",
      "fullTitle": "User API can edit a user",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can edit a user fetched from the API",
      "fullTitle": "User API can edit a user fetched from the API",
      "duration": 53,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit user with empty roles data and does not change the role",
      "fullTitle": "User API Can edit user with empty roles data and does not change the role",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot edit user with invalid roles data",
      "fullTitle": "User API Cannot edit user with invalid roles data",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit user roles by name",
      "fullTitle": "User API Can edit user roles by name",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can destroy an active user and transfer posts to the owner",
      "fullTitle": "User API Can destroy an active user and transfer posts to the owner",
      "duration": 670,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can transfer ownership to admin user",
      "fullTitle": "User API Can transfer ownership to admin user",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can change password and retain the session",
      "fullTitle": "User API Can change password and retain the session",
      "duration": 38,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read the user's Personal Token",
      "fullTitle": "User API Can read the user's Personal Token",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can't read another user's Personal Token",
      "fullTitle": "User API Can't read another user's Personal Token",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can re-generate the user's Personal Token",
      "fullTitle": "User API Can re-generate the user's Personal Token",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a webhook",
      "fullTitle": "Webhooks API Can create a webhook",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Fails nicely when adding a duplicate webhook",
      "fullTitle": "Webhooks API Fails nicely when adding a duplicate webhook",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Fails nicely when creating an orphaned webhook",
      "fullTitle": "Webhooks API Fails nicely when creating an orphaned webhook",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a webhook",
      "fullTitle": "Webhooks API Can edit a webhook",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot edit a non-existent webhook",
      "fullTitle": "Webhooks API Cannot edit a non-existent webhook",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a webhook",
      "fullTitle": "Webhooks API Can delete a webhook",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot delete a non-existent webhook",
      "fullTitle": "Webhooks API Cannot delete a non-existent webhook",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request authors",
      "fullTitle": "Authors Content API Can request authors",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request authors including post count",
      "fullTitle": "Authors Content API Can request authors including post count",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request single author",
      "fullTitle": "Authors Content API Can request single author",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request author by id including post count",
      "fullTitle": "Authors Content API Can request author by id including post count",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not access without key",
      "fullTitle": "Content API key authentication Can not access without key",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can access with with valid key",
      "fullTitle": "Content API key authentication Can access with with valid key",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Blocks the request when host limit is in place for custom integrations",
      "fullTitle": "Content API key authentication Host Settings: custom integration limits Blocks the request when host limit is in place for custom integrations",
      "duration": 98,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request only active newsletters",
      "fullTitle": "Newsletters Content API Can request only active newsletters",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot override filters to fetch archived newsletters",
      "fullTitle": "Newsletters Content API Cannot override filters to fetch archived newsletters",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can read offer details from id",
      "fullTitle": "Offers Content API Can read offer details from id",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request pages",
      "fullTitle": "Pages Content API Can request pages",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot request pages with mobiledoc or lexical formats",
      "fullTitle": "Pages Content API Cannot request pages with mobiledoc or lexical formats",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request page",
      "fullTitle": "Pages Content API Can request page",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for public post",
      "fullTitle": "Pages Content API Can include free and paid tiers for public post",
      "duration": 38,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for members only post",
      "fullTitle": "Pages Content API Can include free and paid tiers for members only post",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include only paid tier for paid post",
      "fullTitle": "Pages Content API Can include only paid tier for paid post",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include specific tier for page with tiers visibility",
      "fullTitle": "Pages Content API Can include specific tier for page with tiers visibility",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request posts",
      "fullTitle": "Posts Content API Can request posts",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot request mobiledoc or lexical formats",
      "fullTitle": "Posts Content API Cannot request mobiledoc or lexical formats",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter posts by tag",
      "fullTitle": "Posts Content API Can filter posts by tag",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter posts by authors",
      "fullTitle": "Posts Content API Can filter posts by authors",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request fields of posts",
      "fullTitle": "Posts Content API Can request fields of posts",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include relations",
      "fullTitle": "Posts Content API Can include relations",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request posts from different origin",
      "fullTitle": "Posts Content API Can request posts from different origin",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can filter by published date",
      "fullTitle": "Posts Content API Can filter by published date",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request a single post",
      "fullTitle": "Posts Content API Can request a single post",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for public post",
      "fullTitle": "Posts Content API Can include free and paid tiers for public post",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include free and paid tiers for members only post",
      "fullTitle": "Posts Content API Can include free and paid tiers for members only post",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include only paid tier for paid post",
      "fullTitle": "Posts Content API Can include only paid tier for paid post",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include specific tier for post with tiers visibility",
      "fullTitle": "Posts Content API Can include specific tier for post with tiers visibility",
      "duration": 49,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use post excerpt as field",
      "fullTitle": "Posts Content API Can use post excerpt as field",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use post plaintext as field",
      "fullTitle": "Posts Content API Can use post plaintext as field",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Adds ?ref tags",
      "fullTitle": "Posts Content API Adds ?ref tags",
      "duration": 50,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request settings",
      "fullTitle": "Settings Content API Can request settings",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request tags",
      "fullTitle": "Tags Content API Can request tags",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request tags with limit=all",
      "fullTitle": "Tags Content API Can request tags with limit=all",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can limit tags to receive",
      "fullTitle": "Tags Content API Can limit tags to receive",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can include post count",
      "fullTitle": "Tags Content API Can include post count",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use multiple fields and have valid url fields",
      "fullTitle": "Tags Content API Can use multiple fields and have valid url fields",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can use single url field and have valid url fields",
      "fullTitle": "Tags Content API Can use single url field and have valid url fields",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request only active tiers",
      "fullTitle": "Tiers Content API Can request only active tiers",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not allow to create a checkout session if the customerEmail is associated with a paid member",
      "fullTitle": "Create Stripe Checkout Session Does not allow to create a checkout session if the customerEmail is associated with a paid member",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a checkout session when using offers",
      "fullTitle": "Create Stripe Checkout Session Can create a checkout session when using offers",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a checkout session without passing a customerEmail",
      "fullTitle": "Create Stripe Checkout Session Can create a checkout session without passing a customerEmail",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does allow to create a checkout session if the customerEmail is not associated with a paid member",
      "fullTitle": "Create Stripe Checkout Session Does allow to create a checkout session if the customerEmail is not associated with a paid member",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does pass url attribution source to session metadata",
      "fullTitle": "Create Stripe Checkout Session Member attribution Does pass url attribution source to session metadata",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does pass post attribution source to session metadata",
      "fullTitle": "Create Stripe Checkout Session Member attribution Does pass post attribution source to session metadata",
      "duration": 25,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Ignores attribution_* values in metadata",
      "fullTitle": "Create Stripe Checkout Session Member attribution Ignores attribution_* values in metadata",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can add positive feedback",
      "fullTitle": "Members Feedback Can add positive feedback",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can change existing feedback",
      "fullTitle": "Members Feedback Can change existing feedback",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Allows authentication via session",
      "fullTitle": "Members Feedback Authentication Allows authentication via session",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for invalid score",
      "fullTitle": "Members Feedback Validation Throws for invalid score",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for invalid score type",
      "fullTitle": "Members Feedback Validation Throws for invalid score type",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for invalid uuid",
      "fullTitle": "Members Feedback Validation Throws for invalid uuid",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for nonexisting uuid",
      "fullTitle": "Members Feedback Validation Throws for nonexisting uuid",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws for nonexisting post",
      "fullTitle": "Members Feedback Validation Throws for nonexisting post",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can not get member data",
      "fullTitle": "Comments API when not authenticated but enabled can not get member data",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update comment notifications",
      "fullTitle": "Comments API when not authenticated but enabled can update comment notifications",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can get member data",
      "fullTitle": "Comments API when authenticated can get member data",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update member expertise",
      "fullTitle": "Comments API when authenticated can update member expertise",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "trims whitespace from expertise",
      "fullTitle": "Comments API when authenticated trims whitespace from expertise",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update name",
      "fullTitle": "Comments API when authenticated can update name",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can update comment notifications",
      "fullTitle": "Comments API when authenticated can update comment notifications",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can remove member from suppression list and resubscribe to default newsletters",
      "fullTitle": "Comments API when authenticated can remove member from suppression list and resubscribe to default newsletters",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Errors when passed multiple emails",
      "fullTitle": "sendMagicLink Errors when passed multiple emails",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws an error when logging in to a email that does not exist",
      "fullTitle": "sendMagicLink Throws an error when logging in to a email that does not exist",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws an error when logging in to a email that does not exist (invite only)",
      "fullTitle": "sendMagicLink Throws an error when logging in to a email that does not exist (invite only)",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Throws an error when trying to sign up on an invite only site",
      "fullTitle": "sendMagicLink Throws an error when trying to sign up on an invite only site",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a valid magic link with tokenData, and without urlHistory",
      "fullTitle": "sendMagicLink Creates a valid magic link with tokenData, and without urlHistory",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a valid magic link from custom signup with redirection",
      "fullTitle": "sendMagicLink Creates a valid magic link from custom signup with redirection",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a valid magic link from custom signup with redirection disabled",
      "fullTitle": "sendMagicLink Creates a valid magic link from custom signup with redirection disabled",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "triggers email alert for free member signup",
      "fullTitle": "sendMagicLink triggers email alert for free member signup",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Converts the urlHistory to the attribution and stores it in the token",
      "fullTitle": "sendMagicLink Converts the urlHistory to the attribution and stores it in the token",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will not set a cookie if the token is invalid",
      "fullTitle": "Members Signin Will not set a cookie if the token is invalid",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will set a cookie if the token is valid",
      "fullTitle": "Members Signin Will set a cookie if the token is valid",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will redirect to the free welcome page for signup",
      "fullTitle": "Members Signin Will redirect to the free welcome page for signup",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will redirect to the paid welcome page for signup-paid",
      "fullTitle": "Members Signin Will redirect to the paid welcome page for signup-paid",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will redirect to the free welcome page for subscribe",
      "fullTitle": "Members Signin Will redirect to the free welcome page for subscribe",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a new member on signup",
      "fullTitle": "Members Signin Will create a new member on signup",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Allows a signin via a signup link",
      "fullTitle": "Members Signin Allows a signin via a signup link",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will not create a new member on signin",
      "fullTitle": "Members Signin Will not create a new member on signin",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Expires a token after 10 minutes of first usage",
      "fullTitle": "Members Signin Validity Period Expires a token after 10 minutes of first usage",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Expires a token after 3 uses",
      "fullTitle": "Members Signin Validity Period Expires a token after 3 uses",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Expires a token after 24 hours if never used",
      "fullTitle": "Members Signin Validity Period Expires a token after 24 hours if never used",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will rate limit member enumeration",
      "fullTitle": "Members Signin Rate limiting Will rate limit member enumeration",
      "duration": 82,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will clear rate limits for members auth",
      "fullTitle": "Members Signin Rate limiting Will clear rate limits for members auth",
      "duration": 61,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a member attribution if magic link contains an attribution source",
      "fullTitle": "Members Signin Member attribution Will create a member attribution if magic link contains an attribution source",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Responds with a 401 when the signature is invalid",
      "fullTitle": "Members API /webhooks/stripe/ Responds with a 401 when the signature is invalid",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Responds with a 200 to unknown events with valid signature",
      "fullTitle": "Members API /webhooks/stripe/ Responds with a 200 to unknown events with valid signature",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cancellation of paid subscriptions correctly",
      "fullTitle": "Members API Handling the end of subscriptions Handles cancellation of paid subscriptions correctly",
      "duration": 78,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can create a comlimentary subscription after canceling a paid subscription",
      "fullTitle": "Members API Handling the end of subscriptions Can create a comlimentary subscription after canceling a paid subscription",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cancellation of old fashioned comped subscriptions correctly",
      "fullTitle": "Members API Handling the end of subscriptions Handles cancellation of old fashioned comped subscriptions correctly",
      "duration": 73,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a member if one does not exist",
      "fullTitle": "Members API checkout.session.completed Will create a member if one does not exist",
      "duration": 53,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a member with default newsletter subscriptions",
      "fullTitle": "Members API checkout.session.completed Will create a member with default newsletter subscriptions",
      "duration": 42,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Will create a member with signup newsletter preference",
      "fullTitle": "Members API checkout.session.completed Will create a member with signup newsletter preference",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not 500 if the member is unknown",
      "fullTitle": "Members API checkout.session.completed Does not 500 if the member is unknown",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Correctly includes monthly forever percentage discounts in MRR",
      "fullTitle": "Members API Discounts Correctly includes monthly forever percentage discounts in MRR",
      "duration": 78,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Correctly includes yearly forever percentage discounts in MRR",
      "fullTitle": "Members API Discounts Correctly includes yearly forever percentage discounts in MRR",
      "duration": 77,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Correctly includes monthly forever amount off discounts in MRR",
      "fullTitle": "Members API Discounts Correctly includes monthly forever amount off discounts in MRR",
      "duration": 76,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Correctly includes yearly forever amount off discounts in MRR",
      "fullTitle": "Members API Discounts Correctly includes yearly forever amount off discounts in MRR",
      "duration": 77,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not include repeating discounts in MRR",
      "fullTitle": "Members API Discounts Does not include repeating discounts in MRR",
      "duration": 77,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Also supports adding a discount to an existing subscription",
      "fullTitle": "Members API Discounts Also supports adding a discount to an existing subscription",
      "duration": 70,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Silently ignores an invalid offer id in metadata",
      "fullTitle": "Members API Discounts Silently ignores an invalid offer id in metadata",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "empty initial activity feed",
      "fullTitle": "Members API Member attribution empty initial activity feed",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with url attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with url attribution",
      "duration": 63,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with post attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with post attribution",
      "duration": 56,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with deleted post attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with deleted post attribution",
      "duration": 55,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with page attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with page attribution",
      "duration": 56,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with tag attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with tag attribution",
      "duration": 56,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with author attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with author attribution",
      "duration": 56,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent without attribution",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent without attribution",
      "duration": 52,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Creates a SubscriptionCreatedEvent with empty attribution object",
      "fullTitle": "Members API Member attribution Creates a SubscriptionCreatedEvent with empty attribution object",
      "duration": 54,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns subscription created attributions in activity feed",
      "fullTitle": "Members API Member attribution Returns subscription created attributions in activity feed",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return a JWKS",
      "fullTitle": "Members .well-known GET /jwks.json should return a JWKS",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all comments of a post",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated Can browse all comments of a post",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot comment on a post",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot comment on a post",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot reply on a post",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot reply on a post",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot report a comment",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot report a comment",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot like a comment",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot like a comment",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot unlike a comment",
      "fullTitle": "Comments API when commenting enabled for all when not authenticated cannot unlike a comment",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can comment on a post",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can comment on a post",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can browse all comments of a post",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can browse all comments of a post",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to your own comment",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can reply to your own comment",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can reply to a comment",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Limits returned replies to 3",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Limits returned replies to 3",
      "duration": 90,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment with www domain",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can reply to a comment with www domain",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment with custom support email",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can reply to a comment with custom support email",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can like a comment",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can like a comment",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot like a comment multiple times",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Cannot like a comment multiple times",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can like a reply",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can like a reply",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can return replies",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can return replies",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can request last page of replies",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can request last page of replies",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can remove a like (unlike)",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can remove a like (unlike)",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot unlike a comment if it has not been liked",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Cannot unlike a comment if it has not been liked",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can report a comment",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can report a comment",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Cannot report a comment twice",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Cannot report a comment twice",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can edit a comment on a post",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can edit a comment on a post",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not edit a comment post_id",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not edit a comment post_id",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not edit a comment which does not belong to you",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not edit a comment which does not belong to you",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not edit a comment as a member who is not you",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not edit a comment as a member who is not you",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not reply to a reply",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not reply to a reply",
      "duration": 82,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not edit a replies parent",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can not edit a replies parent",
      "duration": 45,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can fetch counts",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can fetch counts",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can delete a comment, and it is redacted from",
      "fullTitle": "Comments API when commenting enabled for all when authenticated Can delete a comment, and it is redacted from",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not comment on a post",
      "fullTitle": "Comments API when commenting disabled Can not comment on a post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can comment on a post",
      "fullTitle": "Comments API when paid only commenting Members with access Can comment on a post",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment",
      "fullTitle": "Comments API when paid only commenting Members with access Can reply to a comment",
      "duration": 28,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not comment on a post",
      "fullTitle": "Comments API when paid only commenting Members without access Can not comment on a post",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not reply to a comment",
      "fullTitle": "Comments API when paid only commenting Members without access Can not reply to a comment",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can comment on a post",
      "fullTitle": "Comments API Tier-only posts Members with access Can comment on a post",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can reply to a comment",
      "fullTitle": "Comments API Tier-only posts Members with access Can reply to a comment",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not comment on a post",
      "fullTitle": "Comments API Tier-only posts Members without access Can not comment on a post",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can not reply to a comment",
      "fullTitle": "Comments API Tier-only posts Members without access Can not reply to a comment",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with content version header even when accept version header is NOT PRESENT",
      "fullTitle": "API Versioning Admin API responds with content version header even when accept version header is NOT PRESENT",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with current content version header when requested version is BEHIND current version and CAN respond",
      "fullTitle": "API Versioning Admin API responds with current content version header when requested version is BEHIND current version and CAN respond",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with current content version header when requested version is AHEAD and CAN respond",
      "fullTitle": "API Versioning Admin API responds with current content version header when requested version is AHEAD and CAN respond",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "allows invalid accept-version header",
      "fullTitle": "API Versioning Admin API allows invalid accept-version header",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with error requested version is AHEAD and CANNOT respond",
      "fullTitle": "API Versioning Admin API responds with error requested version is AHEAD and CANNOT respond",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with error when requested version is BEHIND and CANNOT respond",
      "fullTitle": "API Versioning Admin API responds with error when requested version is BEHIND and CANNOT respond",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with error and sends email ONCE when requested version is BEHIND and CANNOT respond multiple times",
      "fullTitle": "API Versioning Admin API responds with error and sends email ONCE when requested version is BEHIND and CANNOT respond multiple times",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with 404 error when the resource cannot be found",
      "fullTitle": "API Versioning Admin API responds with 404 error when the resource cannot be found",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does an internal rewrite for canary URLs with accept version set",
      "fullTitle": "API Versioning Admin API Does an internal rewrite for canary URLs with accept version set",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does an internal rewrite for v3 URL + POST with accept version set",
      "fullTitle": "API Versioning Admin API Does an internal rewrite for v3 URL + POST with accept version set",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with 406 for an unknown version with accept-version set ahead",
      "fullTitle": "API Versioning Admin API responds with 406 for an unknown version with accept-version set ahead",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with 406 for an unknown version with accept-version set behind",
      "fullTitle": "API Versioning Admin API responds with 406 for an unknown version with accept-version set behind",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with no content version header when accept version header is NOT PRESENT",
      "fullTitle": "API Versioning Content API responds with no content version header when accept version header is NOT PRESENT",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with current content version header when requested version is BEHIND current version and CAN respond",
      "fullTitle": "API Versioning Content API responds with current content version header when requested version is BEHIND current version and CAN respond",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does an internal rewrite with accept version set when version is included in the URL",
      "fullTitle": "API Versioning Content API Does an internal rewrite with accept version set when version is included in the URL",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "responds with 404 error when the resource cannot be found",
      "fullTitle": "API Versioning Content API responds with 404 error when the resource cannot be found",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can receive a webmention",
      "fullTitle": "Webmentions (receiving) can receive a webmention",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "will update a mentions source metadata",
      "fullTitle": "Webmentions (receiving) will update a mentions source metadata",
      "duration": 26,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "will delete a mention when the target in Ghost was deleted",
      "fullTitle": "Webmentions (receiving) will delete a mention when the target in Ghost was deleted",
      "duration": 304,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can receive a webmention to homepage",
      "fullTitle": "Webmentions (receiving) can receive a webmention to homepage",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <a> link",
      "fullTitle": "Webmentions (receiving) can verify a webmention <a> link",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <a> link to post",
      "fullTitle": "Webmentions (receiving) can verify a webmention <a> link to post",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <a> link to post with tracking parameters",
      "fullTitle": "Webmentions (receiving) can verify a webmention <a> link to post with tracking parameters",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "marks as unverified if url not present on source",
      "fullTitle": "Webmentions (receiving) marks as unverified if url not present on source",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <img> link",
      "fullTitle": "Webmentions (receiving) can verify a webmention <img> link",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can verify a webmention <video> link",
      "fullTitle": "Webmentions (receiving) can verify a webmention <video> link",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is rate limited against spamming mention requests",
      "fullTitle": "Webmentions (receiving) is rate limited against spamming mention requests",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "http://localhost should 404",
      "fullTitle": "Advanced URL Configurations Subdirectory config http://localhost should 404",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog should 301 to /blog/",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog should 301 to /blog/",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/ should 200",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/ should 200",
      "duration": 74,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/welcome/ should 200",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/welcome/ should 200",
      "duration": 82,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/welcome/ should 404",
      "fullTitle": "Advanced URL Configurations Subdirectory config /welcome/ should 404",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/tag/getting-started/ should 200",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/tag/getting-started/ should 200",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/tag/getting-started/ should 404",
      "fullTitle": "Advanced URL Configurations Subdirectory config /tag/getting-started/ should 404",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/welcome/amp/ should 200 if amp is enabled",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/welcome/amp/ should 200 if amp is enabled",
      "duration": 139,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/blog/welcome/amp/ should 301",
      "fullTitle": "Advanced URL Configurations Subdirectory config /blog/welcome/amp/ should 301",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/welcome/amp/ should 404",
      "fullTitle": "Advanced URL Configurations Subdirectory config /welcome/amp/ should 404",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve welcome post with old permalink structure",
      "fullTitle": "Custom Frontend routing serve welcome post with old permalink structure",
      "duration": 39,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve welcome post with new permalink structure",
      "fullTitle": "Custom Frontend routing serve welcome post with new permalink structure",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve welcome post with new permalink structure and old date",
      "fullTitle": "Custom Frontend routing serve welcome post with new permalink structure and old date",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve rss",
      "fullTitle": "Custom Frontend routing serve rss",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve collection index",
      "fullTitle": "Custom Frontend routing serve collection index",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serve tag",
      "fullTitle": "Custom Frontend routing serve tag",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not serve empty sitemaps",
      "fullTitle": "Custom Frontend routing should not serve empty sitemaps",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should 404 for unknown post",
      "fullTitle": "Default Frontend routing Error should 404 for unknown post",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should 404 for unknown file",
      "fullTitle": "Default Frontend routing Error should 404 for unknown file",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/ should respond with valid HTML",
      "fullTitle": "Default Frontend routing Main Routes / should respond with valid HTML",
      "duration": 38,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/author/ghost/ should respond with valid HTML",
      "fullTitle": "Default Frontend routing Main Routes /author/ghost/ should respond with valid HTML",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/tag/getting-started/ should respond with valid HTML",
      "fullTitle": "Default Frontend routing Main Routes /tag/getting-started/ should respond with valid HTML",
      "duration": 32,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/welcome/ should respond with valid HTML",
      "fullTitle": "Default Frontend routing Single post /welcome/ should respond with valid HTML",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not work with date permalinks",
      "fullTitle": "Default Frontend routing Single post should not work with date permalinks",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect to editor",
      "fullTitle": "Default Frontend routing Post edit should redirect to editor",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should 404 for non-edit parameter",
      "fullTitle": "Default Frontend routing Post edit should 404 for non-edit parameter",
      "duration": 22,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/edit/ should NOT redirect to the editor",
      "fullTitle": "Default Frontend routing Post edit Admin Redirects Disabled /edit/ should NOT redirect to the editor",
      "duration": 35,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should respond with html for valid url",
      "fullTitle": "Default Frontend routing AMP post AMP Enabled should respond with html for valid url",
      "duration": 36,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not work with date permalinks",
      "fullTitle": "Default Frontend routing AMP post AMP Enabled should not work with date permalinks",
      "duration": 23,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/amp/ should redirect to regular post, including any query params",
      "fullTitle": "Default Frontend routing AMP post AMP Disabled /amp/ should redirect to regular post, including any query params",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should 301 redirect with CC=1year without slash",
      "fullTitle": "Default Frontend routing RSS should 301 redirect with CC=1year without slash",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should get 301 redirect with CC=1year to /rss/ from /feed/",
      "fullTitle": "Default Frontend routing RSS should get 301 redirect with CC=1year to /rss/ from /feed/",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/rss/ should serve an RSS feed",
      "fullTitle": "Default Frontend routing RSS /rss/ should serve an RSS feed",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/author/ghost/rss/ should serve an RSS feed",
      "fullTitle": "Default Frontend routing RSS /author/ghost/rss/ should serve an RSS feed",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/tag/getting-started/rss/ should serve an RSS feed",
      "fullTitle": "Default Frontend routing RSS /tag/getting-started/rss/ should serve an RSS feed",
      "duration": 26,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should retrieve theme assets",
      "fullTitle": "Default Frontend routing Static assets should retrieve theme assets",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should retrieve default robots.txt",
      "fullTitle": "Default Frontend routing Static assets should retrieve default robots.txt",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should retrieve default favicon.ico",
      "fullTitle": "Default Frontend routing Static assets should retrieve default favicon.ico",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap.xml",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap-posts.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap-posts.xml",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap-pages.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap-pages.xml",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap-tags.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap-tags.xml",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap-users.xml",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap-users.xml",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve sitemap.xsl",
      "fullTitle": "Default Frontend routing Site Map should serve sitemap.xsl",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/ should redirect to /private/",
      "fullTitle": "Default Frontend routing Private Blogging / should redirect to /private/",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/welcome/ should redirect to /private/",
      "fullTitle": "Default Frontend routing Private Blogging /welcome/ should redirect to /private/",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "/private/?r=%2Fwelcome%2F should not redirect",
      "fullTitle": "Default Frontend routing Private Blogging /private/?r=%2Fwelcome%2F should not redirect",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect, NOT 404 for private route with extra path",
      "fullTitle": "Default Frontend routing Private Blogging should redirect, NOT 404 for private route with extra path",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should still serve private RSS feed",
      "fullTitle": "Default Frontend routing Private Blogging should still serve private RSS feed",
      "duration": 31,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should still serve private tag RSS feed",
      "fullTitle": "Default Frontend routing Private Blogging should still serve private tag RSS feed",
      "duration": 24,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect, NOT 404 for private tag RSS feed with extra path",
      "fullTitle": "Default Frontend routing Private Blogging should redirect, NOT 404 for private tag RSS feed with extra path",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect, NOT 404 for unknown private RSS feed",
      "fullTitle": "Default Frontend routing Private Blogging should redirect, NOT 404 for unknown private RSS feed",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve private robots.txt",
      "fullTitle": "Default Frontend routing Private Blogging should serve private robots.txt",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should display email_only post",
      "fullTitle": "Frontend Routing: Email Routes should display email_only post",
      "duration": 44,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "404s for draft email only post",
      "fullTitle": "Frontend Routing: Email Routes 404s for draft email only post",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "404s known slug",
      "fullTitle": "Frontend Routing: Email Routes 404s known slug",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "404s unknown slug",
      "fullTitle": "Frontend Routing: Email Routes 404s unknown slug",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has valid fixtures",
      "fullTitle": "e2e {{#get}} helper has valid fixtures",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "not authenticated member",
      "fullTitle": "e2e {{#get}} helper {{access}} property not authenticated member",
      "duration": 37,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "free member",
      "fullTitle": "e2e {{#get}} helper {{access}} property free member",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "paid member",
      "fullTitle": "e2e {{#get}} helper {{access}} property paid member",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "comped member",
      "fullTitle": "e2e {{#get}} helper {{access}} property comped member",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tiers member not including tiers",
      "fullTitle": "e2e {{#get}} helper {{access}} property tiers member not including tiers",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tiers member including tiers",
      "fullTitle": "e2e {{#get}} helper {{access}} property tiers member including tiers",
      "duration": 12,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tiers member with different product",
      "fullTitle": "e2e {{#get}} helper {{access}} property tiers member with different product",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has valid fixtures",
      "fullTitle": "e2e {{#next_post}} helper has valid fixtures",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property not authenticated member next members post",
      "duration": 29,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property not authenticated member next paid post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property not authenticated member next tiers post",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property not authenticated member next public post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property free member next members post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property free member next paid post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property free member next tiers post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property free member next public post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property paid member next members post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property paid member next paid post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property paid member next tiers post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property paid member next public post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member next members post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member next paid post",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member next tiers post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member next public post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next members post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member with different product next members post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next paid post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member with different product next paid post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next tiers post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member with different product next tiers post",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "next public post",
      "fullTitle": "e2e {{#next_post}} helper {{access}} property tiers member with different product next public post",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return free",
      "fullTitle": "Front-end member stats  should return free",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return paid",
      "fullTitle": "Front-end member stats  should return paid",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return comped",
      "fullTitle": "Front-end member stats  should return comped",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return total",
      "fullTitle": "Front-end member stats  should return total",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error serving webhook endpoint without any parameters",
      "fullTitle": "Front-end members behavior Member routes should error serving webhook endpoint without any parameters",
      "duration": 7,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should fail processing a webhook endpoint with stripe header",
      "fullTitle": "Front-end members behavior Member routes should fail processing a webhook endpoint with stripe header",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return no content for invalid token passed in session",
      "fullTitle": "Front-end members behavior Member routes should return no content for invalid token passed in session",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return no content when removing member sessions",
      "fullTitle": "Front-end members behavior Member routes should return no content when removing member sessions",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid member token on member data endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid member token on member data endpoint",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid data on member magic link endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid data on member magic link endpoint",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid data on members create checkout session endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid data on members create checkout session endpoint",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should not throw 400 for using offer id on members create checkout session endpoint",
      "fullTitle": "Front-end members behavior Member routes should not throw 400 for using offer id on members create checkout session endpoint",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid data on members create update session endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid data on members create update session endpoint",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid subscription id on members create update session endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid subscription id on members create update session endpoint",
      "duration": 19,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for invalid data on members subscription endpoint",
      "fullTitle": "Front-end members behavior Member routes should error for invalid data on members subscription endpoint",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for fetching member newsletters with missing uuid",
      "fullTitle": "Front-end members behavior Member routes should error for fetching member newsletters with missing uuid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for fetching member newsletters with invalid uuid",
      "fullTitle": "Front-end members behavior Member routes should error for fetching member newsletters with invalid uuid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for updating member newsletters with missing uuid",
      "fullTitle": "Front-end members behavior Member routes should error for updating member newsletters with missing uuid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should error for updating member newsletters with invalid uuid",
      "fullTitle": "Front-end members behavior Member routes should error for updating member newsletters with invalid uuid",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should fetch and update member newsletters with valid uuid",
      "fullTitle": "Front-end members behavior Member routes should fetch and update member newsletters with valid uuid",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should serve theme 404 on members endpoint",
      "fullTitle": "Front-end members behavior Member routes should serve theme 404 on members endpoint",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect invalid token on members endpoint",
      "fullTitle": "Front-end members behavior Member routes should redirect invalid token on members endpoint",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect with uuid and action param",
      "fullTitle": "Front-end members behavior Unsubscribe should redirect with uuid and action param",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should pass through an optional newsletter param",
      "fullTitle": "Front-end members behavior Unsubscribe should pass through an optional newsletter param",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should reject when missing a uuid",
      "fullTitle": "Front-end members behavior Unsubscribe should reject when missing a uuid",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read public post content",
      "fullTitle": "Front-end members behavior Content gating as non-member can read public post content",
      "duration": 34,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read members post content",
      "fullTitle": "Front-end members behavior Content gating as non-member cannot read members post content",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read paid post content",
      "fullTitle": "Front-end members behavior Content gating as non-member cannot read paid post content",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read label-only post content",
      "fullTitle": "Front-end members behavior Content gating as non-member cannot read label-only post content",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as non-member cannot read product-only post content",
      "duration": 10,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "doesn't generate a MemberPageView event",
      "fullTitle": "Front-end members behavior Content gating as non-member doesn't generate a MemberPageView event",
      "duration": 9,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read public post content",
      "fullTitle": "Front-end members behavior Content gating as free member can read public post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read members post content",
      "fullTitle": "Front-end members behavior Content gating as free member can read members post content",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read paid post content",
      "fullTitle": "Front-end members behavior Content gating as free member cannot read paid post content",
      "duration": 13,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read label-only post content",
      "fullTitle": "Front-end members behavior Content gating as free member cannot read label-only post content",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as free member cannot read product-only post content",
      "duration": 14,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "generates a MemberPageView event",
      "fullTitle": "Front-end members behavior Content gating as free member with vip label generates a MemberPageView event",
      "duration": 21,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read public post content",
      "fullTitle": "Front-end members behavior Content gating as paid member can read public post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read members post content",
      "fullTitle": "Front-end members behavior Content gating as paid member can read members post content",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read paid post content",
      "fullTitle": "Front-end members behavior Content gating as paid member can read paid post content",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read label-only post content",
      "fullTitle": "Front-end members behavior Content gating as paid member cannot read label-only post content",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as paid member can read product-only post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "generates a MemberPageView event",
      "fullTitle": "Front-end members behavior Content gating as paid member generates a MemberPageView event",
      "duration": 20,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read public post content",
      "fullTitle": "Front-end members behavior Content gating as comped member can read public post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read members post content",
      "fullTitle": "Front-end members behavior Content gating as comped member can read members post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read paid post content",
      "fullTitle": "Front-end members behavior Content gating as comped member can read paid post content",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cannot read label-only post content",
      "fullTitle": "Front-end members behavior Content gating as comped member cannot read label-only post content",
      "duration": 18,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as comped member can read product-only post content",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "can read product-only post content",
      "fullTitle": "Front-end members behavior Content gating as member with product can read product-only post content",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should display draft posts accessed via uuid",
      "fullTitle": "Frontend Routing: Preview Routes should display draft posts accessed via uuid",
      "duration": 30,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect draft posts accessed via uuid and edit to admin post edit screen",
      "fullTitle": "Frontend Routing: Preview Routes should redirect draft posts accessed via uuid and edit to admin post edit screen",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect draft page accessed via uuid and edit to admin page edit screen",
      "fullTitle": "Frontend Routing: Preview Routes should redirect draft page accessed via uuid and edit to admin page edit screen",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect published posts to their live url",
      "fullTitle": "Frontend Routing: Preview Routes should redirect published posts to their live url",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "404s unknown uuids",
      "fullTitle": "Frontend Routing: Preview Routes 404s unknown uuids",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles same origin request",
      "fullTitle": "OPTIONS requests CORS headers in Admin API Handles same origin request",
      "duration": 79,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles no origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Admin API Handles no origin header request",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cross-domain origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Admin API Handles cross-domain origin header request",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles same origin request",
      "fullTitle": "OPTIONS requests CORS headers in Members API Handles same origin request",
      "duration": 6,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles no origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Members API Handles no origin header request",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cross-domain origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Members API Handles cross-domain origin header request",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Responds with no referer vary header value when same referer",
      "fullTitle": "OPTIONS requests CORS headers in Frontend Responds with no referer vary header value when same referer",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not allow CORS with when no origin is present in the request",
      "fullTitle": "OPTIONS requests CORS headers in Frontend Does not allow CORS with when no origin is present in the request",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Responds with no referer vary header value when different referer",
      "fullTitle": "OPTIONS requests CORS headers in Frontend Responds with no referer vary header value when different referer",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles same origin request",
      "fullTitle": "OPTIONS requests CORS headers in Content API Handles same origin request",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles no origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Content API Handles no origin header request",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Handles cross-domain origin header request",
      "fullTitle": "OPTIONS requests CORS headers in Content API Handles cross-domain origin header request",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return 404 for unknown assets",
      "fullTitle": "Admin Routing Assets should return 404 for unknown assets",
      "duration": 11,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should retrieve built assets",
      "fullTitle": "Admin Routing Assets should retrieve built assets",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect /GHOST/ to /ghost/",
      "fullTitle": "Admin Routing Admin Redirects should redirect /GHOST/ to /ghost/",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should redirect admin access over non-HTTPS",
      "fullTitle": "Admin Routing Require HTTPS - redirect should redirect admin access over non-HTTPS",
      "duration": 8,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should allow admin access over HTTPS",
      "fullTitle": "Admin Routing Require HTTPS - redirect should allow admin access over HTTPS",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serves assets in production",
      "fullTitle": "Admin Routing built template serves assets in production",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "serves assets when not in production",
      "fullTitle": "Admin Routing built template serves assets when not in production",
      "duration": 3,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "generates it's own ETag header from file contents",
      "fullTitle": "Admin Routing built template generates it's own ETag header from file contents",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Full test",
      "fullTitle": "Click Tracking Full test",
      "duration": 318,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves urls",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves urls",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves posts",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves posts",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves removed resources",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves removed resources",
      "duration": 211,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves pages",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves pages",
      "duration": 96,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves tags",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves tags",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves authors",
      "fullTitle": "Member Attribution Service getAttribution for models without subdirectory resolves authors",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves urls",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves urls",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves posts",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves posts",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves removed resources",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves removed resources",
      "duration": 123,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves pages",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves pages",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves tags",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves tags",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves authors",
      "fullTitle": "Member Attribution Service getAttribution for models with subdirectory resolves authors",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "resolves urls",
      "fullTitle": "Member Attribution Service getAttribution for referrer resolves urls",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "New draft post created",
      "fullTitle": "Mentions Service Sending Service does not send when we expect it to not send New draft post created",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Email only post published",
      "fullTitle": "Mentions Service Sending Service does not send when we expect it to not send Email only post published",
      "duration": 41,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Post without content",
      "fullTitle": "Mentions Service Sending Service does not send when we expect it to not send Post without content",
      "duration": 80,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "New draft page created",
      "fullTitle": "Mentions Service Sending Service does not send when we expect it to not send New draft page created",
      "duration": 82,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Newly published post (post.published)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Newly published post (post.published)",
      "duration": 98,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Edited published post (post.published.edited)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Edited published post (post.published.edited)",
      "duration": 171,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Unpublished post (post.unpublished)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Unpublished post (post.unpublished)",
      "duration": 179,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Newly published page (page.published)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Newly published page (page.published)",
      "duration": 68,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Edited published page (page.published.edited)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Edited published page (page.published.edited)",
      "duration": 120,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Unpublished post (post.unpublished)",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Unpublished post (post.unpublished)",
      "duration": 187,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Sends for links that got removed from a post",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Sends for links that got removed from a post",
      "duration": 211,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Sends for links that got removed from a page",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send Sends for links that got removed from a page",
      "duration": 137,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "New paid post",
      "fullTitle": "Mentions Service Sending Service does send when we expect it to send New paid post",
      "duration": 138,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Inits milestone service",
      "fullTitle": "Milestones Service Inits milestone service",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Runs ARR and Members milestone jobs",
      "fullTitle": "Milestones Service Runs ARR and Members milestone jobs",
      "duration": 423,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not run ARR milestones when Stripe is not live enabled",
      "fullTitle": "Milestones Service Does not run ARR milestones when Stripe is not live enabled",
      "duration": 279,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Does not send emails for milestones when imported members present",
      "fullTitle": "Milestones Service Does not send emails for milestones when imported members present",
      "duration": 197,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Always returns at least one currency",
      "fullTitle": "MRR Stats Service getCurrentMrr Always returns at least one currency",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Can handle multiple currencies",
      "fullTitle": "MRR Stats Service getCurrentMrr Can handle multiple currencies",
      "duration": 50,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Increases MRR by 1 / 12 of yearly subscriptions",
      "fullTitle": "MRR Stats Service getCurrentMrr Increases MRR by 1 / 12 of yearly subscriptions",
      "duration": 50,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Increases MRR with monthly subscriptions",
      "fullTitle": "MRR Stats Service getCurrentMrr Increases MRR with monthly subscriptions",
      "duration": 49,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Floors results",
      "fullTitle": "MRR Stats Service getCurrentMrr Floors results",
      "duration": 362,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "Returns deltas in ascending order",
      "fullTitle": "MRR Stats Service fetchAllDeltas Returns deltas in ascending order",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return a JWKS",
      "fullTitle": ".well-known GET /jwks.json should return a JWKS",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "member.added event is triggered",
      "fullTitle": "member.* events member.added event is triggered",
      "duration": 17,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "member.deleted event is triggered",
      "fullTitle": "member.* events member.deleted event is triggered",
      "duration": 43,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "member.edited event is triggered",
      "fullTitle": "member.* events member.edited event is triggered",
      "duration": 27,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.published event is triggered",
      "fullTitle": "page.* events page.published event is triggered",
      "duration": 144,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.added event is triggered",
      "fullTitle": "page.* events page.added event is triggered",
      "duration": 71,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.deleted event is triggered",
      "fullTitle": "page.* events page.deleted event is triggered",
      "duration": 146,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.edited event is triggered",
      "fullTitle": "page.* events page.edited event is triggered",
      "duration": 91,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.scheduled event is triggered",
      "fullTitle": "page.* events page.scheduled event is triggered",
      "duration": 93,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.published.edited event is triggered",
      "fullTitle": "page.* events page.published.edited event is triggered",
      "duration": 187,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.unpublished event is triggered",
      "fullTitle": "page.* events page.unpublished event is triggered",
      "duration": 171,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.tag.detached event is triggered",
      "fullTitle": "page.* events page.tag.detached event is triggered",
      "duration": 166,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.tag.attached event is triggered",
      "fullTitle": "page.* events page.tag.attached event is triggered",
      "duration": 140,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.rescheduled event is triggered",
      "fullTitle": "page.* events page.rescheduled event is triggered",
      "duration": 101,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "page.unscheduled event is triggered",
      "fullTitle": "page.* events page.unscheduled event is triggered",
      "duration": 98,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.published event is triggered",
      "fullTitle": "post.* events post.published event is triggered",
      "duration": 172,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.unpublished event is triggered",
      "fullTitle": "post.* events post.unpublished event is triggered",
      "duration": 175,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.added event is triggered",
      "fullTitle": "post.* events post.added event is triggered",
      "duration": 69,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.deleted event is triggered",
      "fullTitle": "post.* events post.deleted event is triggered",
      "duration": 116,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.scheduled event is triggered",
      "fullTitle": "post.* events post.scheduled event is triggered",
      "duration": 92,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.unscheduled event is triggered",
      "fullTitle": "post.* events post.unscheduled event is triggered",
      "duration": 103,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.tag.attached event is triggered",
      "fullTitle": "post.* events post.tag.attached event is triggered",
      "duration": 150,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.tag.detached event is triggered",
      "fullTitle": "post.* events post.tag.detached event is triggered",
      "duration": 176,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.edited event is triggered",
      "fullTitle": "post.* events post.edited event is triggered",
      "duration": 89,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.published.edited event is triggered",
      "fullTitle": "post.* events post.published.edited event is triggered",
      "duration": 155,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "post.rescheduled event is triggered",
      "fullTitle": "post.* events post.rescheduled event is triggered",
      "duration": 102,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "site.changed event is triggered",
      "fullTitle": "site.* events site.changed event is triggered",
      "duration": 120,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tag.added event is triggered",
      "fullTitle": "tag.* events tag.added event is triggered",
      "duration": 33,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tag.deleted event is triggered",
      "fullTitle": "tag.* events tag.deleted event is triggered",
      "duration": 57,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "tag.edited event is triggered",
      "fullTitle": "tag.* events tag.edited event is triggered",
      "duration": 61,
      "currentRetry": 0,
      "err": {}
    }
  ]
}